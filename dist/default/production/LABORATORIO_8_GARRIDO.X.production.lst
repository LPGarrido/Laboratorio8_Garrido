

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 20 18:15:36 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220                           
   221                           	psect	idataBANK0
   222  031F                     __pidataBANK0:
   223                           
   224                           ;initializer for _TABLA
   225  031F  343F               	retlw	63
   226  0320  3406               	retlw	6
   227  0321  345B               	retlw	91
   228  0322  344F               	retlw	79
   229  0323  3466               	retlw	102
   230  0324  346D               	retlw	109
   231  0325  347D               	retlw	125
   232  0326  3407               	retlw	7
   233  0327  347F               	retlw	127
   234  0328  346F               	retlw	111
   235  0329  3477               	retlw	119
   236  032A  347C               	retlw	124
   237  032B  3439               	retlw	57
   238  032C  345E               	retlw	94
   239  032D  3479               	retlw	121
   240  032E  3471               	retlw	113
   241  0008                     _PORTDbits	set	8
   242  0001                     _TMR0	set	1
   243  0008                     _PORTD	set	8
   244  0007                     _PORTC	set	7
   245  0005                     _PORTA	set	5
   246  000B                     _INTCONbits	set	11
   247  001E                     _ADRESH	set	30
   248  0006                     _PORTB	set	6
   249  001F                     _ADCON0bits	set	31
   250  000C                     _PIR1bits	set	12
   251  008C                     _PIE1bits	set	140
   252  009F                     _ADCON1bits	set	159
   253  0081                     _OPTION_REGbits	set	129
   254  008F                     _OSCCONbits	set	143
   255  0088                     _TRISD	set	136
   256  0087                     _TRISC	set	135
   257  0086                     _TRISB	set	134
   258  0085                     _TRISA	set	133
   259  0189                     _ANSELH	set	393
   260  0188                     _ANSEL	set	392
   261                           
   262                           	psect	cinit
   263  0013                     start_initialization:	
   264                           ; #config settings
   265                           
   266  0013                     __initialization:
   267                           
   268                           ; Initialize objects allocated to BANK0
   269  0013  1383               	bcf	3,7	;select IRP bank0
   270  0014  3050               	movlw	low (__pdataBANK0+16)
   271  0015  00FD               	movwf	btemp+-1
   272  0016  3003               	movlw	high __pidataBANK0
   273  0017  00FE               	movwf	btemp
   274  0018  301F               	movlw	low __pidataBANK0
   275  0019  00FF               	movwf	btemp+1
   276  001A  3040               	movlw	low __pdataBANK0
   277  001B  0084               	movwf	4
   278  001C  120A  118A  2310  120A  118A  	fcall	init_ram0
   279                           
   280                           ; Clear objects allocated to BANK0
   281  0021  01D0               	clrf	__pbssBANK0& (0+127)
   282  0022  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   283  0023  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   284  0024  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   285  0025  01D4               	clrf	(__pbssBANK0+4)& (0+127)
   286  0026  01D5               	clrf	(__pbssBANK0+5)& (0+127)
   287  0027  01D6               	clrf	(__pbssBANK0+6)& (0+127)
   288  0028  01D7               	clrf	(__pbssBANK0+7)& (0+127)
   289                           
   290                           ; Clear objects allocated to COMMON
   291  0029  01FB               	clrf	__pbssCOMMON& (0+127)
   292  002A  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   293  002B                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  002B                     __end_of__initialization:
   297  002B  0183               	clrf	3
   298  002C  120A  118A  2A11   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  007B                     __pbssCOMMON:
   302  007B                     _banderas:
   303  007B                     	ds	1
   304  007C                     _temp:
   305  007C                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308  0050                     __pbssBANK0:
   309  0050                     _display:
   310  0050                     	ds	3
   311  0053                     _valores:
   312  0053                     	ds	3
   313  0056                     _t_ADRESH2:
   314  0056                     	ds	2
   315                           
   316                           	psect	dataBANK0
   317  0040                     __pdataBANK0:
   318  0040                     _TABLA:
   319  0040                     	ds	16
   320                           
   321                           	psect	inittext
   322  030C                     init_fetch0:	
   323                           ;	Called with low address in FSR and high address in W
   324                           
   325  030C  087E               	movf	btemp,w
   326  030D  008A               	movwf	10
   327  030E  087F               	movf	btemp+1,w
   328  030F  0082               	movwf	2
   329  0310                     init_ram0:	
   330                           ;Called with:
   331                           ;	high address of idata address in btemp 
   332                           ;	low address of idata address in btemp+1 
   333                           ;	low address of data in FSR
   334                           ;	high address + 1 of data in btemp-1
   335                           
   336  0310  120A  118A  230C  120A  118A  	fcall	init_fetch0
   337  0315  0080               	movwf	0
   338  0316  0A84               	incf	4,f
   339  0317  0804               	movf	4,w
   340  0318  067D               	xorwf	btemp+-1,w
   341  0319  1903               	btfsc	3,2
   342  031A  3400               	retlw	0
   343  031B  0AFF               	incf	btemp+1,f
   344  031C  1903               	btfsc	3,2
   345  031D  0AFE               	incf	btemp,f
   346  031E  2B10               	goto	init_ram0
   347                           
   348                           	psect	cstackCOMMON
   349  0070                     __pcstackCOMMON:
   350  0070                     ?_mostrar_valor:
   351  0070                     ?_RESET_TMR0:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ??_RESET_TMR0:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_setup:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_isr:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_main:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?i1___wmul:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     RESET_TMR0@TMR_VAR:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     mostrar_valor@DISPLAY1:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     i1___wmul@multiplier:	
   376                           ; 1 bytes @ 0x0
   377                           
   378                           
   379                           ; 2 bytes @ 0x0
   380  0070                     	ds	1
   381  0071                     mostrar_valor@DISPLAY2:
   382                           
   383                           ; 1 bytes @ 0x1
   384  0071                     	ds	1
   385  0072                     ??_mostrar_valor:
   386  0072                     i1___wmul@multiplicand:	
   387                           ; 1 bytes @ 0x2
   388                           
   389                           
   390                           ; 2 bytes @ 0x2
   391  0072                     	ds	2
   392  0074                     ??i1___wmul:
   393  0074                     mostrar_valor@DISPLAY0:	
   394                           ; 1 bytes @ 0x4
   395                           
   396  0074                     i1___wmul@product:	
   397                           ; 1 bytes @ 0x4
   398                           
   399                           
   400                           ; 2 bytes @ 0x4
   401  0074                     	ds	2
   402  0076                     ?i1___awdiv:
   403  0076                     i1___awdiv@divisor:	
   404                           ; 2 bytes @ 0x6
   405                           
   406                           
   407                           ; 2 bytes @ 0x6
   408  0076                     	ds	2
   409  0078                     i1___awdiv@dividend:
   410                           
   411                           ; 2 bytes @ 0x8
   412  0078                     	ds	2
   413  007A                     ??i1___awdiv:
   414                           
   415                           ; 1 bytes @ 0xA
   416  007A                     	ds	1
   417                           
   418                           	psect	cstackBANK0
   419  0020                     __pcstackBANK0:
   420  0020                     i1___awdiv@counter:
   421                           
   422                           ; 1 bytes @ 0x0
   423  0020                     	ds	1
   424  0021                     i1___awdiv@sign:
   425                           
   426                           ; 1 bytes @ 0x1
   427  0021                     	ds	1
   428  0022                     i1___awdiv@quotient:
   429                           
   430                           ; 2 bytes @ 0x2
   431  0022                     	ds	2
   432  0024                     ??_isr:
   433                           
   434                           ; 1 bytes @ 0x4
   435  0024                     	ds	5
   436  0029                     ??_setup:
   437  0029                     ?_set_display:	
   438                           ; 1 bytes @ 0x9
   439                           
   440  0029                     ?___bmul:	
   441                           ; 1 bytes @ 0x9
   442                           
   443  0029                     ?___wmul:	
   444                           ; 1 bytes @ 0x9
   445                           
   446  0029                     set_display@VALORES1:	
   447                           ; 2 bytes @ 0x9
   448                           
   449  0029                     ___bmul@multiplicand:	
   450                           ; 1 bytes @ 0x9
   451                           
   452  0029                     ___wmul@multiplier:	
   453                           ; 1 bytes @ 0x9
   454                           
   455                           
   456                           ; 2 bytes @ 0x9
   457  0029                     	ds	1
   458  002A                     ??___bmul:
   459  002A                     set_display@VALORES2:	
   460                           ; 1 bytes @ 0xA
   461                           
   462                           
   463                           ; 1 bytes @ 0xA
   464  002A                     	ds	1
   465  002B                     ??_set_display:
   466  002B                     ___bmul@product:	
   467                           ; 1 bytes @ 0xB
   468                           
   469  002B                     ___wmul@multiplicand:	
   470                           ; 1 bytes @ 0xB
   471                           
   472                           
   473                           ; 2 bytes @ 0xB
   474  002B                     	ds	1
   475  002C                     set_display@VALORES0:
   476  002C                     ___bmul@multiplier:	
   477                           ; 1 bytes @ 0xC
   478                           
   479                           
   480                           ; 1 bytes @ 0xC
   481  002C                     	ds	1
   482  002D                     ??___wmul:
   483  002D                     ___wmul@product:	
   484                           ; 1 bytes @ 0xD
   485                           
   486                           
   487                           ; 2 bytes @ 0xD
   488  002D                     	ds	2
   489  002F                     ?___awdiv:
   490  002F                     ___awdiv@divisor:	
   491                           ; 2 bytes @ 0xF
   492                           
   493                           
   494                           ; 2 bytes @ 0xF
   495  002F                     	ds	2
   496  0031                     ___awdiv@dividend:
   497                           
   498                           ; 2 bytes @ 0x11
   499  0031                     	ds	2
   500  0033                     ??___awdiv:
   501                           
   502                           ; 1 bytes @ 0x13
   503  0033                     	ds	1
   504  0034                     ___awdiv@counter:
   505                           
   506                           ; 1 bytes @ 0x14
   507  0034                     	ds	1
   508  0035                     ___awdiv@sign:
   509                           
   510                           ; 1 bytes @ 0x15
   511  0035                     	ds	1
   512  0036                     ___awdiv@quotient:
   513                           
   514                           ; 2 bytes @ 0x16
   515  0036                     	ds	2
   516  0038                     ?_obtener_valor:
   517  0038                     obtener_valor@VALOR:	
   518                           ; 1 bytes @ 0x18
   519                           
   520                           
   521                           ; 2 bytes @ 0x18
   522  0038                     	ds	2
   523  003A                     ??_obtener_valor:
   524                           
   525                           ; 1 bytes @ 0x1A
   526  003A                     	ds	4
   527  003E                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x1E
   530  003E                     	ds	2
   531                           
   532                           	psect	maintext
   533  0211                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 81 in file "main_lab8.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       2       0       0       0
   556 ;;      Totals:         0       2       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels required when called: 4
   559 ;; This function calls:
   560 ;;		_obtener_valor
   561 ;;		_set_display
   562 ;;		_setup
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568  0211                     _main:	
   569                           ;psect for function _main
   570                           
   571  0211                     l1246:	
   572                           ;incstack = 0
   573                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;main_lab8.c: 82:     setup();
   577  0211  120A  118A  21BF  120A  118A  	fcall	_setup
   578  0216                     l1248:
   579                           
   580                           ;main_lab8.c: 84:         if(ADCON0bits.GO == 0){
   581  0216  1283               	bcf	3,5	;RP0=0, select bank0
   582  0217  1303               	bcf	3,6	;RP1=0, select bank0
   583  0218  189F               	btfsc	31,1	;volatile
   584  0219  2A1B               	goto	u721
   585  021A  2A1C               	goto	u720
   586  021B                     u721:
   587  021B  2A3F               	goto	l1262
   588  021C                     u720:
   589  021C                     l1250:
   590                           
   591                           ;main_lab8.c: 87:             if(ADCON0bits.CHS == 0b0000)
   592  021C  0C1F               	rrf	31,w	;volatile
   593  021D  00BE               	movwf	??_main
   594  021E  0C3E               	rrf	??_main,w
   595  021F  390F               	andlw	15
   596  0220  3A00               	xorlw	0
   597  0221  1D03               	skipz
   598  0222  2A24               	goto	u731
   599  0223  2A25               	goto	u730
   600  0224                     u731:
   601  0224  2A2A               	goto	l1254
   602  0225                     u730:
   603  0225                     l1252:
   604                           
   605                           ;main_lab8.c: 88:                 ADCON0bits.CHS = 0b0001;
   606  0225  081F               	movf	31,w	;volatile
   607  0226  39C3               	andlw	-61
   608  0227  3804               	iorlw	4
   609  0228  009F               	movwf	31	;volatile
   610  0229  2A35               	goto	l1258
   611  022A                     l1254:
   612  022A  0C1F               	rrf	31,w	;volatile
   613  022B  00BE               	movwf	??_main
   614  022C  0C3E               	rrf	??_main,w
   615  022D  390F               	andlw	15
   616  022E  3A01               	xorlw	1
   617  022F  1D03               	skipz
   618  0230  2A32               	goto	u741
   619  0231  2A33               	goto	u740
   620  0232                     u741:
   621  0232  2A35               	goto	l1258
   622  0233                     u740:
   623  0233                     l1256:
   624                           
   625                           ;main_lab8.c: 90:                 ADCON0bits.CHS = 0b0000;
   626  0233  30C3               	movlw	-61
   627  0234  059F               	andwf	31,f	;volatile
   628  0235                     l1258:
   629                           
   630                           ;main_lab8.c: 91:             _delay((unsigned long)((40)*(4000000/4000000.0)));
   631  0235  300C               	movlw	12
   632  0236  1283               	bcf	3,5	;RP0=0, select bank0
   633  0237  1303               	bcf	3,6	;RP1=0, select bank0
   634  0238  00BE               	movwf	??_main
   635  0239                     u757:
   636  0239  0BBE               	decfsz	??_main,f
   637  023A  2A39               	goto	u757
   638  023B  0000               	nop
   639  023C                     l1260:
   640                           
   641                           ;main_lab8.c: 93:             ADCON0bits.GO = 1;
   642  023C  1283               	bcf	3,5	;RP0=0, select bank0
   643  023D  1303               	bcf	3,6	;RP1=0, select bank0
   644  023E  149F               	bsf	31,1	;volatile
   645  023F                     l1262:
   646                           
   647                           ;main_lab8.c: 95:         obtener_valor(t_ADRESH2);
   648  023F  0857               	movf	_t_ADRESH2+1,w
   649  0240  00B9               	movwf	obtener_valor@VALOR+1
   650  0241  0856               	movf	_t_ADRESH2,w
   651  0242  00B8               	movwf	obtener_valor@VALOR
   652  0243  120A  118A  2162  120A  118A  	fcall	_obtener_valor
   653  0248                     l1264:
   654                           
   655                           ;main_lab8.c: 96:         set_display(valores[0],valores[1],valores[2]);
   656  0248  1283               	bcf	3,5	;RP0=0, select bank0
   657  0249  1303               	bcf	3,6	;RP1=0, select bank0
   658  024A  0854               	movf	_valores+1,w
   659  024B  00BE               	movwf	??_main
   660  024C  083E               	movf	??_main,w
   661  024D  00A9               	movwf	set_display@VALORES1
   662  024E  0855               	movf	_valores+2,w
   663  024F  00BF               	movwf	??_main+1
   664  0250  083F               	movf	??_main+1,w
   665  0251  00AA               	movwf	set_display@VALORES2
   666  0252  0853               	movf	_valores,w
   667  0253  120A  118A  22DB  120A  118A  	fcall	_set_display
   668  0258  2A16               	goto	l1248
   669  0259  120A  118A  2810   	ljmp	start
   670  025C                     __end_of_main:
   671                           
   672                           	psect	text1
   673  01BF                     __ptext1:	
   674 ;; *************** function _setup *****************
   675 ;; Defined at:
   676 ;;		line 104 in file "main_lab8.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       1       0       0       0
   693 ;;      Totals:         0       1       0       0       0
   694 ;;Total ram usage:        1 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 2
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704  01BF                     _setup:	
   705                           ;psect for function _setup
   706                           
   707  01BF                     l1120:	
   708                           ;incstack = 0
   709                           ; Regs used in _setup: [wreg+status,2+status,0]
   710                           
   711                           
   712                           ;main_lab8.c: 105:     ANSEL = 0b00000011;
   713  01BF  3003               	movlw	3
   714  01C0  1683               	bsf	3,5	;RP0=1, select bank3
   715  01C1  1703               	bsf	3,6	;RP1=1, select bank3
   716  01C2  0088               	movwf	8	;volatile
   717  01C3                     l1122:
   718                           
   719                           ;main_lab8.c: 106:     ANSELH = 0;
   720  01C3  0189               	clrf	9	;volatile
   721  01C4                     l1124:
   722                           
   723                           ;main_lab8.c: 108:     TRISA = 0b00000011;
   724  01C4  3003               	movlw	3
   725  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   726  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   727  01C7  0085               	movwf	5	;volatile
   728                           
   729                           ;main_lab8.c: 109:     PORTA = 0;
   730  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   731  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   732  01CA  0185               	clrf	5	;volatile
   733                           
   734                           ;main_lab8.c: 111:     TRISB = 0;
   735  01CB  1683               	bsf	3,5	;RP0=1, select bank1
   736  01CC  1303               	bcf	3,6	;RP1=0, select bank1
   737  01CD  0186               	clrf	6	;volatile
   738                           
   739                           ;main_lab8.c: 112:     PORTB = 0;
   740  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   741  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   742  01D0  0186               	clrf	6	;volatile
   743                           
   744                           ;main_lab8.c: 113:     TRISC = 0;
   745  01D1  1683               	bsf	3,5	;RP0=1, select bank1
   746  01D2  1303               	bcf	3,6	;RP1=0, select bank1
   747  01D3  0187               	clrf	7	;volatile
   748                           
   749                           ;main_lab8.c: 114:     PORTC = 0;
   750  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   751  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   752  01D6  0187               	clrf	7	;volatile
   753  01D7                     l1126:
   754                           
   755                           ;main_lab8.c: 115:     TRISD = 0xF8;
   756  01D7  30F8               	movlw	248
   757  01D8  1683               	bsf	3,5	;RP0=1, select bank1
   758  01D9  1303               	bcf	3,6	;RP1=0, select bank1
   759  01DA  0088               	movwf	8	;volatile
   760  01DB                     l1128:
   761                           
   762                           ;main_lab8.c: 116:     PORTD = 0;
   763  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   764  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   765  01DD  0188               	clrf	8	;volatile
   766  01DE                     l1130:
   767                           
   768                           ;main_lab8.c: 119:     OSCCONbits.IRCF = 0b0110;
   769  01DE  1683               	bsf	3,5	;RP0=1, select bank1
   770  01DF  1303               	bcf	3,6	;RP1=0, select bank1
   771  01E0  080F               	movf	15,w	;volatile
   772  01E1  398F               	andlw	-113
   773  01E2  3860               	iorlw	96
   774  01E3  008F               	movwf	15	;volatile
   775  01E4                     l1132:
   776                           
   777                           ;main_lab8.c: 120:     OSCCONbits.SCS = 1;
   778  01E4  140F               	bsf	15,0	;volatile
   779  01E5                     l1134:
   780                           
   781                           ;main_lab8.c: 122:     OPTION_REGbits.T0CS = 0;
   782  01E5  1281               	bcf	1,5	;volatile
   783  01E6                     l1136:
   784                           
   785                           ;main_lab8.c: 123:     OPTION_REGbits.PSA = 0;
   786  01E6  1181               	bcf	1,3	;volatile
   787  01E7                     l1138:
   788                           
   789                           ;main_lab8.c: 124:     OPTION_REGbits.PS = 0b111;
   790  01E7  3007               	movlw	7
   791  01E8  0481               	iorwf	1,f	;volatile
   792                           
   793                           ;main_lab8.c: 125:     TMR0 = 254;
   794  01E9  30FE               	movlw	254
   795  01EA  1283               	bcf	3,5	;RP0=0, select bank0
   796  01EB  1303               	bcf	3,6	;RP1=0, select bank0
   797  01EC  0081               	movwf	1	;volatile
   798  01ED                     l1140:
   799                           
   800                           ;main_lab8.c: 128:     ADCON0bits.ADCS = 0b01;
   801  01ED  081F               	movf	31,w	;volatile
   802  01EE  393F               	andlw	-193
   803  01EF  3840               	iorlw	64
   804  01F0  009F               	movwf	31	;volatile
   805  01F1                     l1142:
   806                           
   807                           ;main_lab8.c: 129:     ADCON1bits.VCFG0 = 0;
   808  01F1  1683               	bsf	3,5	;RP0=1, select bank1
   809  01F2  1303               	bcf	3,6	;RP1=0, select bank1
   810  01F3  121F               	bcf	31,4	;volatile
   811  01F4                     l1144:
   812                           
   813                           ;main_lab8.c: 130:     ADCON1bits.VCFG1 = 0;
   814  01F4  129F               	bcf	31,5	;volatile
   815  01F5                     l1146:
   816                           
   817                           ;main_lab8.c: 131:     ADCON0bits.CHS = 0b0000;
   818  01F5  30C3               	movlw	-61
   819  01F6  1283               	bcf	3,5	;RP0=0, select bank0
   820  01F7  1303               	bcf	3,6	;RP1=0, select bank0
   821  01F8  059F               	andwf	31,f	;volatile
   822  01F9                     l1148:
   823                           
   824                           ;main_lab8.c: 132:     ADCON1bits.ADFM = 0;
   825  01F9  1683               	bsf	3,5	;RP0=1, select bank1
   826  01FA  1303               	bcf	3,6	;RP1=0, select bank1
   827  01FB  139F               	bcf	31,7	;volatile
   828  01FC                     l1150:
   829                           
   830                           ;main_lab8.c: 133:     ADCON0bits.ADON = 1;
   831  01FC  1283               	bcf	3,5	;RP0=0, select bank0
   832  01FD  1303               	bcf	3,6	;RP1=0, select bank0
   833  01FE  141F               	bsf	31,0	;volatile
   834                           
   835                           ;main_lab8.c: 134:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   836  01FF  300C               	movlw	12
   837  0200  1283               	bcf	3,5	;RP0=0, select bank0
   838  0201  1303               	bcf	3,6	;RP1=0, select bank0
   839  0202  00A9               	movwf	??_setup
   840  0203                     u767:
   841  0203  0BA9               	decfsz	??_setup,f
   842  0204  2A03               	goto	u767
   843  0205  0000               	nop
   844  0206                     l1152:
   845                           
   846                           ;main_lab8.c: 137:     PIR1bits.ADIF = 0;
   847  0206  1283               	bcf	3,5	;RP0=0, select bank0
   848  0207  1303               	bcf	3,6	;RP1=0, select bank0
   849  0208  130C               	bcf	12,6	;volatile
   850  0209                     l1154:
   851                           
   852                           ;main_lab8.c: 138:     PIE1bits.ADIE = 1;
   853  0209  1683               	bsf	3,5	;RP0=1, select bank1
   854  020A  1303               	bcf	3,6	;RP1=0, select bank1
   855  020B  170C               	bsf	12,6	;volatile
   856  020C                     l1156:
   857                           
   858                           ;main_lab8.c: 139:     INTCONbits.PEIE = 1;
   859  020C  170B               	bsf	11,6	;volatile
   860  020D                     l1158:
   861                           
   862                           ;main_lab8.c: 140:     INTCONbits.GIE = 1;
   863  020D  178B               	bsf	11,7	;volatile
   864  020E                     l1160:
   865                           
   866                           ;main_lab8.c: 141:     INTCONbits.T0IE = 1;
   867  020E  168B               	bsf	11,5	;volatile
   868  020F                     l1162:
   869                           
   870                           ;main_lab8.c: 142:     INTCONbits.T0IF = 0;
   871  020F  110B               	bcf	11,2	;volatile
   872  0210                     l90:
   873  0210  0008               	return
   874  0211                     __end_of_setup:
   875                           
   876                           	psect	text2
   877  02DB                     __ptext2:	
   878 ;; *************** function _set_display *****************
   879 ;; Defined at:
   880 ;;		line 162 in file "main_lab8.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  VALORES0        1    wreg     unsigned char 
   883 ;;  VALORES1        1    9[BANK0 ] unsigned char 
   884 ;;  VALORES2        1   10[BANK0 ] unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  VALORES0        1   12[BANK0 ] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       2       0       0       0
   897 ;;      Locals:         0       1       0       0       0
   898 ;;      Temps:          0       1       0       0       0
   899 ;;      Totals:         0       4       0       0       0
   900 ;;Total ram usage:        4 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 2
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910  02DB                     _set_display:	
   911                           ;psect for function _set_display
   912                           
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in _set_display: [wreg-fsr0h+status,2+status,0]
   916                           ;set_display@VALORES0 stored from wreg
   917  02DB  1283               	bcf	3,5	;RP0=0, select bank0
   918  02DC  1303               	bcf	3,6	;RP1=0, select bank0
   919  02DD  00AC               	movwf	set_display@VALORES0
   920  02DE                     l1166:
   921                           
   922                           ;main_lab8.c: 163:     display[0] = TABLA[VALORES2];
   923  02DE  082A               	movf	set_display@VALORES2,w
   924  02DF  3E40               	addlw	(low (_TABLA| 0))& (0+255)
   925  02E0  0084               	movwf	4
   926  02E1  1383               	bcf	3,7	;select IRP bank0
   927  02E2  0800               	movf	0,w
   928  02E3  00AB               	movwf	??_set_display
   929  02E4  082B               	movf	??_set_display,w
   930  02E5  00D0               	movwf	_display
   931                           
   932                           ;main_lab8.c: 164:     display[1] = TABLA[VALORES1];
   933  02E6  0829               	movf	set_display@VALORES1,w
   934  02E7  3E40               	addlw	(low (_TABLA| 0))& (0+255)
   935  02E8  0084               	movwf	4
   936  02E9  0800               	movf	0,w
   937  02EA  00AB               	movwf	??_set_display
   938  02EB  082B               	movf	??_set_display,w
   939  02EC  00D1               	movwf	_display+1
   940                           
   941                           ;main_lab8.c: 165:     display[2] = TABLA[VALORES0];
   942  02ED  082C               	movf	set_display@VALORES0,w
   943  02EE  3E40               	addlw	(low (_TABLA| 0))& (0+255)
   944  02EF  0084               	movwf	4
   945  02F0  0800               	movf	0,w
   946  02F1  00AB               	movwf	??_set_display
   947  02F2  082B               	movf	??_set_display,w
   948  02F3  00D2               	movwf	_display+2
   949  02F4                     l99:
   950  02F4  0008               	return
   951  02F5                     __end_of_set_display:
   952                           
   953                           	psect	text3
   954  0162                     __ptext3:	
   955 ;; *************** function _obtener_valor *****************
   956 ;; Defined at:
   957 ;;		line 156 in file "main_lab8.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  VALOR           2   24[BANK0 ] int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       2       0       0       0
   972 ;;      Locals:         0       0       0       0       0
   973 ;;      Temps:          0       4       0       0       0
   974 ;;      Totals:         0       6       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 3
   978 ;; This function calls:
   979 ;;		___awdiv
   980 ;;		___bmul
   981 ;;		___wmul
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987  0162                     _obtener_valor:	
   988                           ;psect for function _obtener_valor
   989                           
   990  0162                     l1164:	
   991                           ;incstack = 0
   992                           ; Regs used in _obtener_valor: [wreg+status,2+status,0+pclath+cstack]
   993                           
   994                           
   995                           ;main_lab8.c: 157:     valores[2] = VALOR/100;
   996  0162  3064               	movlw	100
   997  0163  1283               	bcf	3,5	;RP0=0, select bank0
   998  0164  1303               	bcf	3,6	;RP1=0, select bank0
   999  0165  00AF               	movwf	___awdiv@divisor
  1000  0166  3000               	movlw	0
  1001  0167  00B0               	movwf	___awdiv@divisor+1
  1002  0168  0839               	movf	obtener_valor@VALOR+1,w
  1003  0169  00B2               	movwf	___awdiv@dividend+1
  1004  016A  0838               	movf	obtener_valor@VALOR,w
  1005  016B  00B1               	movwf	___awdiv@dividend
  1006  016C  120A  118A  202F  120A  118A  	fcall	___awdiv
  1007  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0173  082F               	movf	?___awdiv,w
  1010  0174  00BA               	movwf	??_obtener_valor
  1011  0175  083A               	movf	??_obtener_valor,w
  1012  0176  00D5               	movwf	_valores+2
  1013                           
  1014                           ;main_lab8.c: 158:     valores[1] = (VALOR-valores[2]*100)/10;
  1015  0177  300A               	movlw	10
  1016  0178  00AF               	movwf	___awdiv@divisor
  1017  0179  3000               	movlw	0
  1018  017A  00B0               	movwf	___awdiv@divisor+1
  1019  017B  0855               	movf	_valores+2,w
  1020  017C  00BA               	movwf	??_obtener_valor
  1021  017D  01BB               	clrf	??_obtener_valor+1
  1022  017E  083A               	movf	??_obtener_valor,w
  1023  017F  00A9               	movwf	___wmul@multiplier
  1024  0180  083B               	movf	??_obtener_valor+1,w
  1025  0181  00AA               	movwf	___wmul@multiplier+1
  1026  0182  309C               	movlw	156
  1027  0183  00AB               	movwf	___wmul@multiplicand
  1028  0184  30FF               	movlw	255
  1029  0185  00AC               	movwf	___wmul@multiplicand+1
  1030  0186  120A  118A  228F  120A  118A  	fcall	___wmul
  1031  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1032  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1033  018D  0838               	movf	obtener_valor@VALOR,w
  1034  018E  0729               	addwf	?___wmul,w
  1035  018F  00B1               	movwf	___awdiv@dividend
  1036  0190  0839               	movf	obtener_valor@VALOR+1,w
  1037  0191  1803               	skipnc
  1038  0192  0A39               	incf	obtener_valor@VALOR+1,w
  1039  0193  072A               	addwf	?___wmul+1,w
  1040  0194  00B2               	movwf	___awdiv@dividend+1
  1041  0195  120A  118A  202F  120A  118A  	fcall	___awdiv
  1042  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1043  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1044  019C  082F               	movf	?___awdiv,w
  1045  019D  00BC               	movwf	??_obtener_valor+2
  1046  019E  083C               	movf	??_obtener_valor+2,w
  1047  019F  00D4               	movwf	_valores+1
  1048                           
  1049                           ;main_lab8.c: 159:     valores[0] = VALOR-valores[2]*100-valores[1]*10;
  1050  01A0  309C               	movlw	156
  1051  01A1  00BA               	movwf	??_obtener_valor
  1052  01A2  083A               	movf	??_obtener_valor,w
  1053  01A3  00A9               	movwf	___bmul@multiplicand
  1054  01A4  0855               	movf	_valores+2,w
  1055  01A5  120A  118A  22F5  120A  118A  	fcall	___bmul
  1056  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1057  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1058  01AC  00BB               	movwf	??_obtener_valor+1
  1059  01AD  30F6               	movlw	246
  1060  01AE  00BC               	movwf	??_obtener_valor+2
  1061  01AF  083C               	movf	??_obtener_valor+2,w
  1062  01B0  00A9               	movwf	___bmul@multiplicand
  1063  01B1  0854               	movf	_valores+1,w
  1064  01B2  120A  118A  22F5  120A  118A  	fcall	___bmul
  1065  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1066  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1067  01B9  073B               	addwf	??_obtener_valor+1,w
  1068  01BA  0738               	addwf	obtener_valor@VALOR,w
  1069  01BB  00BD               	movwf	??_obtener_valor+3
  1070  01BC  083D               	movf	??_obtener_valor+3,w
  1071  01BD  00D3               	movwf	_valores
  1072  01BE                     l96:
  1073  01BE  0008               	return
  1074  01BF                     __end_of_obtener_valor:
  1075                           
  1076                           	psect	text4
  1077  028F                     __ptext4:	
  1078 ;; *************** function ___wmul *****************
  1079 ;; Defined at:
  1080 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  multiplier      2    9[BANK0 ] unsigned int 
  1083 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  product         2   13[BANK0 ] unsigned int 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    9[BANK0 ] unsigned int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       4       0       0       0
  1096 ;;      Locals:         0       2       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       6       0       0       0
  1099 ;;Total ram usage:        6 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 2
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_obtener_valor
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109  028F                     ___wmul:	
  1110                           ;psect for function ___wmul
  1111                           
  1112  028F                     l998:	
  1113                           ;incstack = 0
  1114                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1115                           
  1116  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0291  01AD               	clrf	___wmul@product
  1119  0292  01AE               	clrf	___wmul@product+1
  1120  0293                     l1000:
  1121  0293  1C29               	btfss	___wmul@multiplier,0
  1122  0294  2A96               	goto	u381
  1123  0295  2A97               	goto	u380
  1124  0296                     u381:
  1125  0296  2A9D               	goto	l194
  1126  0297                     u380:
  1127  0297                     l1002:
  1128  0297  082B               	movf	___wmul@multiplicand,w
  1129  0298  07AD               	addwf	___wmul@product,f
  1130  0299  1803               	skipnc
  1131  029A  0AAE               	incf	___wmul@product+1,f
  1132  029B  082C               	movf	___wmul@multiplicand+1,w
  1133  029C  07AE               	addwf	___wmul@product+1,f
  1134  029D                     l194:
  1135  029D  3001               	movlw	1
  1136  029E                     u395:
  1137  029E  1003               	clrc
  1138  029F  0DAB               	rlf	___wmul@multiplicand,f
  1139  02A0  0DAC               	rlf	___wmul@multiplicand+1,f
  1140  02A1  3EFF               	addlw	-1
  1141  02A2  1D03               	skipz
  1142  02A3  2A9E               	goto	u395
  1143  02A4                     l1004:
  1144  02A4  3001               	movlw	1
  1145  02A5                     u405:
  1146  02A5  1003               	clrc
  1147  02A6  0CAA               	rrf	___wmul@multiplier+1,f
  1148  02A7  0CA9               	rrf	___wmul@multiplier,f
  1149  02A8  3EFF               	addlw	-1
  1150  02A9  1D03               	skipz
  1151  02AA  2AA5               	goto	u405
  1152  02AB                     l1006:
  1153  02AB  0829               	movf	___wmul@multiplier,w
  1154  02AC  042A               	iorwf	___wmul@multiplier+1,w
  1155  02AD  1D03               	btfss	3,2
  1156  02AE  2AB0               	goto	u411
  1157  02AF  2AB1               	goto	u410
  1158  02B0                     u411:
  1159  02B0  2A93               	goto	l1000
  1160  02B1                     u410:
  1161  02B1                     l1008:
  1162  02B1  082E               	movf	___wmul@product+1,w
  1163  02B2  00AA               	movwf	?___wmul+1
  1164  02B3  082D               	movf	___wmul@product,w
  1165  02B4  00A9               	movwf	?___wmul
  1166  02B5                     l196:
  1167  02B5  0008               	return
  1168  02B6                     __end_of___wmul:
  1169                           
  1170                           	psect	text5
  1171  02F5                     __ptext5:	
  1172 ;; *************** function ___bmul *****************
  1173 ;; Defined at:
  1174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  multiplier      1    wreg     unsigned char 
  1177 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  multiplier      1   12[BANK0 ] unsigned char 
  1180 ;;  product         1   11[BANK0 ] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      unsigned char 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       1       0       0       0
  1191 ;;      Locals:         0       2       0       0       0
  1192 ;;      Temps:          0       1       0       0       0
  1193 ;;      Totals:         0       4       0       0       0
  1194 ;;Total ram usage:        4 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_obtener_valor
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204  02F5                     ___bmul:	
  1205                           ;psect for function ___bmul
  1206                           
  1207                           
  1208                           ;incstack = 0
  1209                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1210                           ;___bmul@multiplier stored from wreg
  1211  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1212  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1213  02F7  00AC               	movwf	___bmul@multiplier
  1214  02F8                     l1012:
  1215  02F8  01AB               	clrf	___bmul@product
  1216  02F9                     l1014:
  1217  02F9  1C2C               	btfss	___bmul@multiplier,0
  1218  02FA  2AFC               	goto	u421
  1219  02FB  2AFD               	goto	u420
  1220  02FC                     u421:
  1221  02FC  2B01               	goto	l1018
  1222  02FD                     u420:
  1223  02FD                     l1016:
  1224  02FD  0829               	movf	___bmul@multiplicand,w
  1225  02FE  00AA               	movwf	??___bmul
  1226  02FF  082A               	movf	??___bmul,w
  1227  0300  07AB               	addwf	___bmul@product,f
  1228  0301                     l1018:
  1229  0301  1003               	clrc
  1230  0302  0DA9               	rlf	___bmul@multiplicand,f
  1231  0303                     l1020:
  1232  0303  1003               	clrc
  1233  0304  0CAC               	rrf	___bmul@multiplier,f
  1234  0305  082C               	movf	___bmul@multiplier,w
  1235  0306  1D03               	btfss	3,2
  1236  0307  2B09               	goto	u431
  1237  0308  2B0A               	goto	u430
  1238  0309                     u431:
  1239  0309  2AF9               	goto	l1014
  1240  030A                     u430:
  1241  030A                     l1022:
  1242  030A  082B               	movf	___bmul@product,w
  1243  030B                     l220:
  1244  030B  0008               	return
  1245  030C                     __end_of___bmul:
  1246                           
  1247                           	psect	text6
  1248  002F                     __ptext6:	
  1249 ;; *************** function ___awdiv *****************
  1250 ;; Defined at:
  1251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  divisor         2   15[BANK0 ] int 
  1254 ;;  dividend        2   17[BANK0 ] int 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  quotient        2   22[BANK0 ] int 
  1257 ;;  sign            1   21[BANK0 ] unsigned char 
  1258 ;;  counter         1   20[BANK0 ] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  2   15[BANK0 ] int 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       4       0       0       0
  1269 ;;      Locals:         0       4       0       0       0
  1270 ;;      Temps:          0       1       0       0       0
  1271 ;;      Totals:         0       9       0       0       0
  1272 ;;Total ram usage:        9 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 2
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_obtener_valor
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282  002F                     ___awdiv:	
  1283                           ;psect for function ___awdiv
  1284                           
  1285  002F                     l1026:	
  1286                           ;incstack = 0
  1287                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1288                           
  1289  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0031  01B5               	clrf	___awdiv@sign
  1292  0032                     l1028:
  1293  0032  1FB0               	btfss	___awdiv@divisor+1,7
  1294  0033  2835               	goto	u441
  1295  0034  2836               	goto	u440
  1296  0035                     u441:
  1297  0035  283D               	goto	l1034
  1298  0036                     u440:
  1299  0036                     l1030:
  1300  0036  09AF               	comf	___awdiv@divisor,f
  1301  0037  09B0               	comf	___awdiv@divisor+1,f
  1302  0038  0AAF               	incf	___awdiv@divisor,f
  1303  0039  1903               	skipnz
  1304  003A  0AB0               	incf	___awdiv@divisor+1,f
  1305  003B                     l1032:
  1306  003B  01B5               	clrf	___awdiv@sign
  1307  003C  0AB5               	incf	___awdiv@sign,f
  1308  003D                     l1034:
  1309  003D  1FB2               	btfss	___awdiv@dividend+1,7
  1310  003E  2840               	goto	u451
  1311  003F  2841               	goto	u450
  1312  0040                     u451:
  1313  0040  284A               	goto	l1040
  1314  0041                     u450:
  1315  0041                     l1036:
  1316  0041  09B1               	comf	___awdiv@dividend,f
  1317  0042  09B2               	comf	___awdiv@dividend+1,f
  1318  0043  0AB1               	incf	___awdiv@dividend,f
  1319  0044  1903               	skipnz
  1320  0045  0AB2               	incf	___awdiv@dividend+1,f
  1321  0046                     l1038:
  1322  0046  3001               	movlw	1
  1323  0047  00B3               	movwf	??___awdiv
  1324  0048  0833               	movf	??___awdiv,w
  1325  0049  06B5               	xorwf	___awdiv@sign,f
  1326  004A                     l1040:
  1327  004A  01B6               	clrf	___awdiv@quotient
  1328  004B  01B7               	clrf	___awdiv@quotient+1
  1329  004C                     l1042:
  1330  004C  082F               	movf	___awdiv@divisor,w
  1331  004D  0430               	iorwf	___awdiv@divisor+1,w
  1332  004E  1903               	btfsc	3,2
  1333  004F  2851               	goto	u461
  1334  0050  2852               	goto	u460
  1335  0051                     u461:
  1336  0051  2889               	goto	l1062
  1337  0052                     u460:
  1338  0052                     l1044:
  1339  0052  01B4               	clrf	___awdiv@counter
  1340  0053  0AB4               	incf	___awdiv@counter,f
  1341  0054  2860               	goto	l1050
  1342  0055                     l1046:
  1343  0055  3001               	movlw	1
  1344  0056                     u475:
  1345  0056  1003               	clrc
  1346  0057  0DAF               	rlf	___awdiv@divisor,f
  1347  0058  0DB0               	rlf	___awdiv@divisor+1,f
  1348  0059  3EFF               	addlw	-1
  1349  005A  1D03               	skipz
  1350  005B  2856               	goto	u475
  1351  005C                     l1048:
  1352  005C  3001               	movlw	1
  1353  005D  00B3               	movwf	??___awdiv
  1354  005E  0833               	movf	??___awdiv,w
  1355  005F  07B4               	addwf	___awdiv@counter,f
  1356  0060                     l1050:
  1357  0060  1FB0               	btfss	___awdiv@divisor+1,7
  1358  0061  2863               	goto	u481
  1359  0062  2864               	goto	u480
  1360  0063                     u481:
  1361  0063  2855               	goto	l1046
  1362  0064                     u480:
  1363  0064                     l1052:
  1364  0064  3001               	movlw	1
  1365  0065                     u495:
  1366  0065  1003               	clrc
  1367  0066  0DB6               	rlf	___awdiv@quotient,f
  1368  0067  0DB7               	rlf	___awdiv@quotient+1,f
  1369  0068  3EFF               	addlw	-1
  1370  0069  1D03               	skipz
  1371  006A  2865               	goto	u495
  1372  006B  0830               	movf	___awdiv@divisor+1,w
  1373  006C  0232               	subwf	___awdiv@dividend+1,w
  1374  006D  1D03               	skipz
  1375  006E  2871               	goto	u505
  1376  006F  082F               	movf	___awdiv@divisor,w
  1377  0070  0231               	subwf	___awdiv@dividend,w
  1378  0071                     u505:
  1379  0071  1C03               	skipc
  1380  0072  2874               	goto	u501
  1381  0073  2875               	goto	u500
  1382  0074                     u501:
  1383  0074  287C               	goto	l1058
  1384  0075                     u500:
  1385  0075                     l1054:
  1386  0075  082F               	movf	___awdiv@divisor,w
  1387  0076  02B1               	subwf	___awdiv@dividend,f
  1388  0077  0830               	movf	___awdiv@divisor+1,w
  1389  0078  1C03               	skipc
  1390  0079  03B2               	decf	___awdiv@dividend+1,f
  1391  007A  02B2               	subwf	___awdiv@dividend+1,f
  1392  007B                     l1056:
  1393  007B  1436               	bsf	___awdiv@quotient,0
  1394  007C                     l1058:
  1395  007C  3001               	movlw	1
  1396  007D                     u515:
  1397  007D  1003               	clrc
  1398  007E  0CB0               	rrf	___awdiv@divisor+1,f
  1399  007F  0CAF               	rrf	___awdiv@divisor,f
  1400  0080  3EFF               	addlw	-1
  1401  0081  1D03               	skipz
  1402  0082  287D               	goto	u515
  1403  0083                     l1060:
  1404  0083  3001               	movlw	1
  1405  0084  02B4               	subwf	___awdiv@counter,f
  1406  0085  1D03               	btfss	3,2
  1407  0086  2888               	goto	u521
  1408  0087  2889               	goto	u520
  1409  0088                     u521:
  1410  0088  2864               	goto	l1052
  1411  0089                     u520:
  1412  0089                     l1062:
  1413  0089  0835               	movf	___awdiv@sign,w
  1414  008A  1903               	btfsc	3,2
  1415  008B  288D               	goto	u531
  1416  008C  288E               	goto	u530
  1417  008D                     u531:
  1418  008D  2893               	goto	l1066
  1419  008E                     u530:
  1420  008E                     l1064:
  1421  008E  09B6               	comf	___awdiv@quotient,f
  1422  008F  09B7               	comf	___awdiv@quotient+1,f
  1423  0090  0AB6               	incf	___awdiv@quotient,f
  1424  0091  1903               	skipnz
  1425  0092  0AB7               	incf	___awdiv@quotient+1,f
  1426  0093                     l1066:
  1427  0093  0837               	movf	___awdiv@quotient+1,w
  1428  0094  00B0               	movwf	?___awdiv+1
  1429  0095  0836               	movf	___awdiv@quotient,w
  1430  0096  00AF               	movwf	?___awdiv
  1431  0097                     l347:
  1432  0097  0008               	return
  1433  0098                     __end_of___awdiv:
  1434                           
  1435                           	psect	text7
  1436  0101                     __ptext7:	
  1437 ;; *************** function _isr *****************
  1438 ;; Defined at:
  1439 ;;		line 59 in file "main_lab8.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       5       0       0       0
  1456 ;;      Totals:         0       5       0       0       0
  1457 ;;Total ram usage:        5 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 1
  1460 ;; This function calls:
  1461 ;;		_RESET_TMR0
  1462 ;;		_mostrar_valor
  1463 ;;		i1___awdiv
  1464 ;;		i1___wmul
  1465 ;; This function is called by:
  1466 ;;		Interrupt level 1
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470  0101                     _isr:	
  1471                           ;psect for function _isr
  1472                           
  1473  0101                     i1l1228:
  1474                           
  1475                           ;main_lab8.c: 60:     if(PIR1bits.ADIF){
  1476  0101  1F0C               	btfss	12,6	;volatile
  1477  0102  2904               	goto	u68_21
  1478  0103  2905               	goto	u68_20
  1479  0104                     u68_21:
  1480  0104  293F               	goto	i1l69
  1481  0105                     u68_20:
  1482  0105                     i1l1230:
  1483                           
  1484                           ;main_lab8.c: 61:         if(ADCON0bits.CHS == 0){
  1485  0105  0C1F               	rrf	31,w	;volatile
  1486  0106  00A4               	movwf	??_isr
  1487  0107  0C24               	rrf	??_isr,w
  1488  0108  390F               	andlw	15
  1489  0109  3A00               	xorlw	0
  1490  010A  1D03               	skipz
  1491  010B  290D               	goto	u69_21
  1492  010C  290E               	goto	u69_20
  1493  010D                     u69_21:
  1494  010D  2911               	goto	i1l1234
  1495  010E                     u69_20:
  1496  010E                     i1l1232:
  1497                           
  1498                           ;main_lab8.c: 62:             PORTB = ADRESH;
  1499  010E  081E               	movf	30,w	;volatile
  1500  010F  0086               	movwf	6	;volatile
  1501                           
  1502                           ;main_lab8.c: 63:         }
  1503  0110  293D               	goto	i1l1238
  1504  0111                     i1l1234:
  1505  0111  0C1F               	rrf	31,w	;volatile
  1506  0112  00A4               	movwf	??_isr
  1507  0113  0C24               	rrf	??_isr,w
  1508  0114  390F               	andlw	15
  1509  0115  3A01               	xorlw	1
  1510  0116  1D03               	skipz
  1511  0117  2919               	goto	u70_21
  1512  0118  291A               	goto	u70_20
  1513  0119                     u70_21:
  1514  0119  293D               	goto	i1l1238
  1515  011A                     u70_20:
  1516  011A                     i1l1236:
  1517                           
  1518                           ;main_lab8.c: 66:             t_ADRESH2 = (ADRESH*100/51);
  1519  011A  3033               	movlw	51
  1520  011B  00F6               	movwf	i1___awdiv@divisor
  1521  011C  3000               	movlw	0
  1522  011D  00F7               	movwf	i1___awdiv@divisor+1
  1523  011E  081E               	movf	30,w	;volatile
  1524  011F  00A4               	movwf	??_isr
  1525  0120  01A5               	clrf	??_isr+1
  1526  0121  0824               	movf	??_isr,w
  1527  0122  00F0               	movwf	i1___wmul@multiplier
  1528  0123  0825               	movf	??_isr+1,w
  1529  0124  00F1               	movwf	i1___wmul@multiplier+1
  1530  0125  3064               	movlw	100
  1531  0126  00F2               	movwf	i1___wmul@multiplicand
  1532  0127  3000               	movlw	0
  1533  0128  00F3               	movwf	i1___wmul@multiplicand+1
  1534  0129  120A  118A  22B6  120A  118A  	fcall	i1___wmul
  1535  012E  0871               	movf	?i1___wmul+1,w
  1536  012F  00F9               	movwf	i1___awdiv@dividend+1
  1537  0130  0870               	movf	?i1___wmul,w
  1538  0131  00F8               	movwf	i1___awdiv@dividend
  1539  0132  120A  118A  2098  120A  118A  	fcall	i1___awdiv
  1540  0137  0877               	movf	?i1___awdiv+1,w
  1541  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1543  013A  00D7               	movwf	_t_ADRESH2+1
  1544  013B  0876               	movf	?i1___awdiv,w
  1545  013C  00D6               	movwf	_t_ADRESH2
  1546  013D                     i1l1238:
  1547                           
  1548                           ;main_lab8.c: 68:         PIR1bits.ADIF = 0;
  1549  013D  130C               	bcf	12,6	;volatile
  1550                           
  1551                           ;main_lab8.c: 69:     }
  1552  013E  2957               	goto	i1l75
  1553  013F                     i1l69:	
  1554                           ;main_lab8.c: 70:     else if (INTCONbits.T0IF){
  1555                           
  1556  013F  1D0B               	btfss	11,2	;volatile
  1557  0140  2942               	goto	u71_21
  1558  0141  2943               	goto	u71_20
  1559  0142                     u71_21:
  1560  0142  2957               	goto	i1l75
  1561  0143                     u71_20:
  1562  0143                     i1l1240:
  1563                           
  1564                           ;main_lab8.c: 72:         mostrar_valor(display[0],display[1],display[2]);
  1565  0143  0851               	movf	_display+1,w
  1566  0144  00A4               	movwf	??_isr
  1567  0145  0824               	movf	??_isr,w
  1568  0146  00F0               	movwf	mostrar_valor@DISPLAY1
  1569  0147  0852               	movf	_display+2,w
  1570  0148  00A5               	movwf	??_isr+1
  1571  0149  0825               	movf	??_isr+1,w
  1572  014A  00F1               	movwf	mostrar_valor@DISPLAY2
  1573  014B  0850               	movf	_display,w
  1574  014C  120A  118A  225C  120A  118A  	fcall	_mostrar_valor
  1575  0151                     i1l1242:
  1576                           
  1577                           ;main_lab8.c: 73:         RESET_TMR0(254);
  1578  0151  30FE               	movlw	254
  1579  0152  120A  118A  232F  120A  118A  	fcall	_RESET_TMR0
  1580  0157                     i1l75:
  1581  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0159  0828               	movf	??_isr+4,w
  1584  015A  008A               	movwf	10
  1585  015B  0827               	movf	??_isr+3,w
  1586  015C  0084               	movwf	4
  1587  015D  0E26               	swapf	??_isr+2,w
  1588  015E  0083               	movwf	3
  1589  015F  0EFE               	swapf	btemp,f
  1590  0160  0E7E               	swapf	btemp,w
  1591  0161  0009               	retfie
  1592  0162                     __end_of_isr:
  1593                           
  1594                           	psect	intentry
  1595  0004                     __pintentry:	
  1596                           ;incstack = 0
  1597                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1598                           
  1599  0004                     interrupt_function:
  1600  007E                     saved_w	set	btemp
  1601  0004  00FE               	movwf	btemp
  1602  0005  0E03               	swapf	3,w
  1603  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0008  00A6               	movwf	??_isr+2
  1606  0009  0804               	movf	4,w
  1607  000A  00A7               	movwf	??_isr+3
  1608  000B  080A               	movf	10,w
  1609  000C  00A8               	movwf	??_isr+4
  1610  000D  120A  118A  2901   	ljmp	_isr
  1611                           
  1612                           	psect	text8
  1613  02B6                     __ptext8:	
  1614 ;; *************** function i1___wmul *****************
  1615 ;; Defined at:
  1616 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  multiplier      2    0[COMMON] unsigned int 
  1619 ;;  multiplicand    2    2[COMMON] unsigned int 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  product         2    4[COMMON] unsigned int 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    0[COMMON] unsigned int 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         4       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0
  1634 ;;      Totals:         6       0       0       0       0
  1635 ;;Total ram usage:        6 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_isr
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644  02B6                     i1___wmul:	
  1645                           ;psect for function i1___wmul
  1646                           
  1647  02B6                     i1l1170:	
  1648                           ;incstack = 0
  1649                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  1650                           
  1651  02B6  01F4               	clrf	i1___wmul@product
  1652  02B7  01F5               	clrf	i1___wmul@product+1
  1653  02B8                     i1l1172:
  1654  02B8  1C70               	btfss	i1___wmul@multiplier,0
  1655  02B9  2ABB               	goto	u54_21
  1656  02BA  2ABC               	goto	u54_20
  1657  02BB                     u54_21:
  1658  02BB  2AC2               	goto	i1l194
  1659  02BC                     u54_20:
  1660  02BC                     i1l1174:
  1661  02BC  0872               	movf	i1___wmul@multiplicand,w
  1662  02BD  07F4               	addwf	i1___wmul@product,f
  1663  02BE  1803               	skipnc
  1664  02BF  0AF5               	incf	i1___wmul@product+1,f
  1665  02C0  0873               	movf	i1___wmul@multiplicand+1,w
  1666  02C1  07F5               	addwf	i1___wmul@product+1,f
  1667  02C2                     i1l194:
  1668  02C2  3001               	movlw	1
  1669  02C3                     u55_25:
  1670  02C3  1003               	clrc
  1671  02C4  0DF2               	rlf	i1___wmul@multiplicand,f
  1672  02C5  0DF3               	rlf	i1___wmul@multiplicand+1,f
  1673  02C6  3EFF               	addlw	-1
  1674  02C7  1D03               	skipz
  1675  02C8  2AC3               	goto	u55_25
  1676  02C9                     i1l1176:
  1677  02C9  3001               	movlw	1
  1678  02CA                     u56_25:
  1679  02CA  1003               	clrc
  1680  02CB  0CF1               	rrf	i1___wmul@multiplier+1,f
  1681  02CC  0CF0               	rrf	i1___wmul@multiplier,f
  1682  02CD  3EFF               	addlw	-1
  1683  02CE  1D03               	skipz
  1684  02CF  2ACA               	goto	u56_25
  1685  02D0                     i1l1178:
  1686  02D0  0870               	movf	i1___wmul@multiplier,w
  1687  02D1  0471               	iorwf	i1___wmul@multiplier+1,w
  1688  02D2  1D03               	btfss	3,2
  1689  02D3  2AD5               	goto	u57_21
  1690  02D4  2AD6               	goto	u57_20
  1691  02D5                     u57_21:
  1692  02D5  2AB8               	goto	i1l1172
  1693  02D6                     u57_20:
  1694  02D6                     i1l1180:
  1695  02D6  0875               	movf	i1___wmul@product+1,w
  1696  02D7  00F1               	movwf	?i1___wmul+1
  1697  02D8  0874               	movf	i1___wmul@product,w
  1698  02D9  00F0               	movwf	?i1___wmul
  1699  02DA                     i1l196:
  1700  02DA  0008               	return
  1701  02DB                     __end_ofi1___wmul:
  1702                           
  1703                           	psect	text9
  1704  0098                     __ptext9:	
  1705 ;; *************** function i1___awdiv *****************
  1706 ;; Defined at:
  1707 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  divisor         2    6[COMMON] int 
  1710 ;;  dividend        2    8[COMMON] int 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  quotient        2    2[BANK0 ] int 
  1713 ;;  sign            1    1[BANK0 ] unsigned char 
  1714 ;;  counter         1    0[BANK0 ] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2    6[COMMON] int 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         4       0       0       0       0
  1725 ;;      Locals:         0       4       0       0       0
  1726 ;;      Temps:          1       0       0       0       0
  1727 ;;      Totals:         5       4       0       0       0
  1728 ;;Total ram usage:        9 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_isr
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737  0098                     i1___awdiv:	
  1738                           ;psect for function i1___awdiv
  1739                           
  1740  0098                     i1l1184:	
  1741                           ;incstack = 0
  1742                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  1743                           
  1744  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1746  009A  01A1               	clrf	i1___awdiv@sign
  1747  009B                     i1l1186:
  1748  009B  1FF7               	btfss	i1___awdiv@divisor+1,7
  1749  009C  289E               	goto	u58_21
  1750  009D  289F               	goto	u58_20
  1751  009E                     u58_21:
  1752  009E  28A6               	goto	i1l1192
  1753  009F                     u58_20:
  1754  009F                     i1l1188:
  1755  009F  09F6               	comf	i1___awdiv@divisor,f
  1756  00A0  09F7               	comf	i1___awdiv@divisor+1,f
  1757  00A1  0AF6               	incf	i1___awdiv@divisor,f
  1758  00A2  1903               	skipnz
  1759  00A3  0AF7               	incf	i1___awdiv@divisor+1,f
  1760  00A4                     i1l1190:
  1761  00A4  01A1               	clrf	i1___awdiv@sign
  1762  00A5  0AA1               	incf	i1___awdiv@sign,f
  1763  00A6                     i1l1192:
  1764  00A6  1FF9               	btfss	i1___awdiv@dividend+1,7
  1765  00A7  28A9               	goto	u59_21
  1766  00A8  28AA               	goto	u59_20
  1767  00A9                     u59_21:
  1768  00A9  28B3               	goto	i1l1198
  1769  00AA                     u59_20:
  1770  00AA                     i1l1194:
  1771  00AA  09F8               	comf	i1___awdiv@dividend,f
  1772  00AB  09F9               	comf	i1___awdiv@dividend+1,f
  1773  00AC  0AF8               	incf	i1___awdiv@dividend,f
  1774  00AD  1903               	skipnz
  1775  00AE  0AF9               	incf	i1___awdiv@dividend+1,f
  1776  00AF                     i1l1196:
  1777  00AF  3001               	movlw	1
  1778  00B0  00FA               	movwf	??i1___awdiv
  1779  00B1  087A               	movf	??i1___awdiv,w
  1780  00B2  06A1               	xorwf	i1___awdiv@sign,f
  1781  00B3                     i1l1198:
  1782  00B3  01A2               	clrf	i1___awdiv@quotient
  1783  00B4  01A3               	clrf	i1___awdiv@quotient+1
  1784  00B5                     i1l1200:
  1785  00B5  0876               	movf	i1___awdiv@divisor,w
  1786  00B6  0477               	iorwf	i1___awdiv@divisor+1,w
  1787  00B7  1903               	btfsc	3,2
  1788  00B8  28BA               	goto	u60_21
  1789  00B9  28BB               	goto	u60_20
  1790  00BA                     u60_21:
  1791  00BA  28F2               	goto	i1l1220
  1792  00BB                     u60_20:
  1793  00BB                     i1l1202:
  1794  00BB  01A0               	clrf	i1___awdiv@counter
  1795  00BC  0AA0               	incf	i1___awdiv@counter,f
  1796  00BD  28C9               	goto	i1l1208
  1797  00BE                     i1l1204:
  1798  00BE  3001               	movlw	1
  1799  00BF                     u61_25:
  1800  00BF  1003               	clrc
  1801  00C0  0DF6               	rlf	i1___awdiv@divisor,f
  1802  00C1  0DF7               	rlf	i1___awdiv@divisor+1,f
  1803  00C2  3EFF               	addlw	-1
  1804  00C3  1D03               	skipz
  1805  00C4  28BF               	goto	u61_25
  1806  00C5                     i1l1206:
  1807  00C5  3001               	movlw	1
  1808  00C6  00FA               	movwf	??i1___awdiv
  1809  00C7  087A               	movf	??i1___awdiv,w
  1810  00C8  07A0               	addwf	i1___awdiv@counter,f
  1811  00C9                     i1l1208:
  1812  00C9  1FF7               	btfss	i1___awdiv@divisor+1,7
  1813  00CA  28CC               	goto	u62_21
  1814  00CB  28CD               	goto	u62_20
  1815  00CC                     u62_21:
  1816  00CC  28BE               	goto	i1l1204
  1817  00CD                     u62_20:
  1818  00CD                     i1l1210:
  1819  00CD  3001               	movlw	1
  1820  00CE                     u63_25:
  1821  00CE  1003               	clrc
  1822  00CF  0DA2               	rlf	i1___awdiv@quotient,f
  1823  00D0  0DA3               	rlf	i1___awdiv@quotient+1,f
  1824  00D1  3EFF               	addlw	-1
  1825  00D2  1D03               	skipz
  1826  00D3  28CE               	goto	u63_25
  1827  00D4  0877               	movf	i1___awdiv@divisor+1,w
  1828  00D5  0279               	subwf	i1___awdiv@dividend+1,w
  1829  00D6  1D03               	skipz
  1830  00D7  28DA               	goto	u64_25
  1831  00D8  0876               	movf	i1___awdiv@divisor,w
  1832  00D9  0278               	subwf	i1___awdiv@dividend,w
  1833  00DA                     u64_25:
  1834  00DA  1C03               	skipc
  1835  00DB  28DD               	goto	u64_21
  1836  00DC  28DE               	goto	u64_20
  1837  00DD                     u64_21:
  1838  00DD  28E5               	goto	i1l1216
  1839  00DE                     u64_20:
  1840  00DE                     i1l1212:
  1841  00DE  0876               	movf	i1___awdiv@divisor,w
  1842  00DF  02F8               	subwf	i1___awdiv@dividend,f
  1843  00E0  0877               	movf	i1___awdiv@divisor+1,w
  1844  00E1  1C03               	skipc
  1845  00E2  03F9               	decf	i1___awdiv@dividend+1,f
  1846  00E3  02F9               	subwf	i1___awdiv@dividend+1,f
  1847  00E4                     i1l1214:
  1848  00E4  1422               	bsf	i1___awdiv@quotient,0
  1849  00E5                     i1l1216:
  1850  00E5  3001               	movlw	1
  1851  00E6                     u65_25:
  1852  00E6  1003               	clrc
  1853  00E7  0CF7               	rrf	i1___awdiv@divisor+1,f
  1854  00E8  0CF6               	rrf	i1___awdiv@divisor,f
  1855  00E9  3EFF               	addlw	-1
  1856  00EA  1D03               	skipz
  1857  00EB  28E6               	goto	u65_25
  1858  00EC                     i1l1218:
  1859  00EC  3001               	movlw	1
  1860  00ED  02A0               	subwf	i1___awdiv@counter,f
  1861  00EE  1D03               	btfss	3,2
  1862  00EF  28F1               	goto	u66_21
  1863  00F0  28F2               	goto	u66_20
  1864  00F1                     u66_21:
  1865  00F1  28CD               	goto	i1l1210
  1866  00F2                     u66_20:
  1867  00F2                     i1l1220:
  1868  00F2  0821               	movf	i1___awdiv@sign,w
  1869  00F3  1903               	btfsc	3,2
  1870  00F4  28F6               	goto	u67_21
  1871  00F5  28F7               	goto	u67_20
  1872  00F6                     u67_21:
  1873  00F6  28FC               	goto	i1l1224
  1874  00F7                     u67_20:
  1875  00F7                     i1l1222:
  1876  00F7  09A2               	comf	i1___awdiv@quotient,f
  1877  00F8  09A3               	comf	i1___awdiv@quotient+1,f
  1878  00F9  0AA2               	incf	i1___awdiv@quotient,f
  1879  00FA  1903               	skipnz
  1880  00FB  0AA3               	incf	i1___awdiv@quotient+1,f
  1881  00FC                     i1l1224:
  1882  00FC  0823               	movf	i1___awdiv@quotient+1,w
  1883  00FD  00F7               	movwf	?i1___awdiv+1
  1884  00FE  0822               	movf	i1___awdiv@quotient,w
  1885  00FF  00F6               	movwf	?i1___awdiv
  1886  0100                     i1l347:
  1887  0100  0008               	return
  1888  0101                     __end_ofi1___awdiv:
  1889                           
  1890                           	psect	text10
  1891  025C                     __ptext10:	
  1892 ;; *************** function _mostrar_valor *****************
  1893 ;; Defined at:
  1894 ;;		line 169 in file "main_lab8.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  DISPLAY0        1    wreg     unsigned char 
  1897 ;;  DISPLAY1        1    0[COMMON] unsigned char 
  1898 ;;  DISPLAY2        1    1[COMMON] unsigned char 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  DISPLAY0        1    4[COMMON] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         2       0       0       0       0
  1911 ;;      Locals:         1       0       0       0       0
  1912 ;;      Temps:          2       0       0       0       0
  1913 ;;      Totals:         5       0       0       0       0
  1914 ;;Total ram usage:        5 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_isr
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923  025C                     _mostrar_valor:	
  1924                           ;psect for function _mostrar_valor
  1925                           
  1926                           
  1927                           ;incstack = 0
  1928                           ; Regs used in _mostrar_valor: [wreg-fsr0h+status,2+status,0]
  1929                           ;mostrar_valor@DISPLAY0 stored from wreg
  1930  025C  00F4               	movwf	mostrar_valor@DISPLAY0
  1931  025D                     i1l1070:
  1932                           
  1933                           ;main_lab8.c: 171:     PORTDbits.RD0 = 0;
  1934  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1935  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1936  025F  1008               	bcf	8,0	;volatile
  1937                           
  1938                           ;main_lab8.c: 172:     PORTDbits.RD1 = 0;
  1939  0260  1088               	bcf	8,1	;volatile
  1940                           
  1941                           ;main_lab8.c: 173:     PORTDbits.RD2 = 0;
  1942  0261  1108               	bcf	8,2	;volatile
  1943                           
  1944                           ;main_lab8.c: 175:     switch (banderas)
  1945  0262  2A7B               	goto	i1l1106
  1946  0263                     i1l1072:
  1947                           
  1948                           ;main_lab8.c: 178:             PORTC = DISPLAY0;
  1949  0263  0874               	movf	mostrar_valor@DISPLAY0,w
  1950  0264  0087               	movwf	7	;volatile
  1951  0265                     i1l1074:
  1952                           
  1953                           ;main_lab8.c: 179:             PORTDbits.RD0 = 1;
  1954  0265  1408               	bsf	8,0	;volatile
  1955  0266                     i1l1076:
  1956                           
  1957                           ;main_lab8.c: 180:             banderas = 1;
  1958  0266  01FB               	clrf	_banderas
  1959  0267  0AFB               	incf	_banderas,f
  1960  0268                     i1l1078:
  1961                           
  1962                           ;main_lab8.c: 181:             PORTDbits.RD7 = 1;
  1963  0268  1788               	bsf	8,7	;volatile
  1964  0269  2A8E               	goto	i1l104
  1965  026A                     i1l1082:
  1966                           
  1967                           ;main_lab8.c: 184:             PORTC = DISPLAY1;
  1968  026A  0870               	movf	mostrar_valor@DISPLAY1,w
  1969  026B  0087               	movwf	7	;volatile
  1970  026C                     i1l1084:
  1971                           
  1972                           ;main_lab8.c: 185:             PORTDbits.RD1 = 1;
  1973  026C  1488               	bsf	8,1	;volatile
  1974                           
  1975                           ;main_lab8.c: 186:             banderas = 2;
  1976  026D  3002               	movlw	2
  1977  026E  00F2               	movwf	??_mostrar_valor
  1978  026F  0872               	movf	??_mostrar_valor,w
  1979  0270  00FB               	movwf	_banderas
  1980  0271  2A8E               	goto	i1l104
  1981  0272                     i1l1088:
  1982                           
  1983                           ;main_lab8.c: 189:             PORTC = DISPLAY2;
  1984  0272  0871               	movf	mostrar_valor@DISPLAY2,w
  1985  0273  0087               	movwf	7	;volatile
  1986  0274                     i1l1090:
  1987                           
  1988                           ;main_lab8.c: 190:             PORTDbits.RD2 = 1;
  1989  0274  1508               	bsf	8,2	;volatile
  1990  0275                     i1l1092:
  1991                           
  1992                           ;main_lab8.c: 191:             banderas = 0;
  1993  0275  01FB               	clrf	_banderas
  1994  0276  2A8E               	goto	i1l104
  1995  0277                     i1l1096:
  1996                           
  1997                           ;main_lab8.c: 194:             PORTC = 0b10000000;
  1998  0277  3080               	movlw	128
  1999  0278  0087               	movwf	7	;volatile
  2000  0279                     i1l1098:
  2001                           
  2002                           ;main_lab8.c: 195:             PORTDbits.RD0 = 1;
  2003  0279  1408               	bsf	8,0	;volatile
  2004  027A  2A75               	goto	i1l1092
  2005  027B                     i1l1106:
  2006  027B  087B               	movf	_banderas,w
  2007  027C  00F2               	movwf	??_mostrar_valor
  2008  027D  01F3               	clrf	??_mostrar_valor+1
  2009                           
  2010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 1, Range of values is 0 to 0
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte            4     3 (average)
  2016                           ; direct_byte           11     8 (fixed)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019  027E  0873               	movf	??_mostrar_valor+1,w
  2020  027F  3A00               	xorlw	0	; case 0
  2021  0280  1903               	skipnz
  2022  0281  2A83               	goto	i1l1296
  2023  0282  2A77               	goto	i1l1096
  2024  0283                     i1l1296:
  2025                           
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 3, Range of values is 0 to 2
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte           10     6 (average)
  2031                           ; direct_byte           17     8 (fixed)
  2032                           ; jumptable            260     6 (fixed)
  2033                           ;	Chosen strategy is simple_byte
  2034  0283  0872               	movf	??_mostrar_valor,w
  2035  0284  3A00               	xorlw	0	; case 0
  2036  0285  1903               	skipnz
  2037  0286  2A63               	goto	i1l1072
  2038  0287  3A01               	xorlw	1	; case 1
  2039  0288  1903               	skipnz
  2040  0289  2A6A               	goto	i1l1082
  2041  028A  3A03               	xorlw	3	; case 2
  2042  028B  1903               	skipnz
  2043  028C  2A72               	goto	i1l1088
  2044  028D  2A77               	goto	i1l1096
  2045  028E                     i1l104:
  2046  028E  0008               	return
  2047  028F                     __end_of_mostrar_valor:
  2048                           
  2049                           	psect	text11
  2050  032F                     __ptext11:	
  2051 ;; *************** function _RESET_TMR0 *****************
  2052 ;; Defined at:
  2053 ;;		line 150 in file "main_lab8.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  TMR_VAR         1    wreg     unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  TMR_VAR         1    0[COMMON] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         1       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0
  2070 ;;      Totals:         1       0       0       0       0
  2071 ;;Total ram usage:        1 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_isr
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080  032F                     _RESET_TMR0:	
  2081                           ;psect for function _RESET_TMR0
  2082                           
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _RESET_TMR0: [wreg]
  2086                           ;RESET_TMR0@TMR_VAR stored from wreg
  2087  032F  00F0               	movwf	RESET_TMR0@TMR_VAR
  2088  0330                     i1l1114:
  2089                           
  2090                           ;main_lab8.c: 151:     TMR0 = TMR_VAR;
  2091  0330  0870               	movf	RESET_TMR0@TMR_VAR,w
  2092  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0333  0081               	movwf	1	;volatile
  2095  0334                     i1l1116:
  2096                           
  2097                           ;main_lab8.c: 152:     INTCONbits.T0IF = 0;
  2098  0334  110B               	bcf	11,2	;volatile
  2099  0335                     i1l93:
  2100  0335  0008               	return
  2101  0336                     __end_of_RESET_TMR0:
  2102  007E                     btemp	set	126	;btemp
  2103  007E                     wtemp0	set	126
  2104                           
  2105                           	psect	idloc
  2106                           
  2107                           ;Config register IDLOC0 @ 0x2000
  2108                           ;	unspecified, using default values
  2109  2000                     	org	8192
  2110  2000  3FFF               	dw	16383
  2111                           
  2112                           ;Config register IDLOC1 @ 0x2001
  2113                           ;	unspecified, using default values
  2114  2001                     	org	8193
  2115  2001  3FFF               	dw	16383
  2116                           
  2117                           ;Config register IDLOC2 @ 0x2002
  2118                           ;	unspecified, using default values
  2119  2002                     	org	8194
  2120  2002  3FFF               	dw	16383
  2121                           
  2122                           ;Config register IDLOC3 @ 0x2003
  2123                           ;	unspecified, using default values
  2124  2003                     	org	8195
  2125  2003  3FFF               	dw	16383
  2126                           
  2127                           	psect	config
  2128                           
  2129                           ;Config register CONFIG1 @ 0x2007
  2130                           ;	Oscillator Selection bits
  2131                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2132                           ;	Watchdog Timer Enable bit
  2133                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2134                           ;	Power-up Timer Enable bit
  2135                           ;	PWRTE = OFF, PWRT disabled
  2136                           ;	RE3/MCLR pin function select bit
  2137                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2138                           ;	Code Protection bit
  2139                           ;	CP = OFF, Program memory code protection is disabled
  2140                           ;	Data Code Protection bit
  2141                           ;	CPD = OFF, Data memory code protection is disabled
  2142                           ;	Brown Out Reset Selection bits
  2143                           ;	BOREN = OFF, BOR disabled
  2144                           ;	Internal External Switchover bit
  2145                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2146                           ;	Fail-Safe Clock Monitor Enabled bit
  2147                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2148                           ;	Low Voltage Programming Enable bit
  2149                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2150                           ;	In-Circuit Debugger Mode bit
  2151                           ;	DEBUG = 0x1, unprogrammed default
  2152  2007                     	org	8199
  2153  2007  20D4               	dw	8404
  2154                           
  2155                           ;Config register CONFIG2 @ 0x2008
  2156                           ;	Brown-out Reset Selection bit
  2157                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2158                           ;	Flash Program Memory Self Write Enable bits
  2159                           ;	WRT = OFF, Write protection off
  2160  2008                     	org	8200
  2161  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     32      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___awdiv
    i1___awdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->_obtener_valor
    _obtener_valor->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    _isr->i1___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1652
                                             30 BANK0      2     2      0
                      _obtener_valor
                        _set_display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_display                                          4     2      2     218
                                              9 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _obtener_valor                                        6     4      2    1434
                                             24 BANK0      6     4      2
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     344
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              9 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     704
                                             15 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     736
                                              4 BANK0      5     5      0
                         _RESET_TMR0
                      _mostrar_valor
                          i1___awdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) i1___awdiv                                            9     5      4     352
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _mostrar_valor                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _RESET_TMR0                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _obtener_valor
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _set_display
   _setup

 _isr (ROOT)
   _RESET_TMR0
   _mostrar_valor
   i1___awdiv
     i1___wmul (ARG)
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 20 18:15:36 2022

                      pc 0002           ___bmul@product 002B                       l90 0210  
                     l96 01BE                       l99 02F4             ___awdiv@sign 0035  
                     fsr 0004      ___wmul@multiplicand 002B         i1___wmul@product 0074  
                    l220 030B                      l194 029D                      l347 0097  
                    l196 02B5                      l998 028F                      u410 02B1  
                    u411 02B0                      u500 0075                      u420 02FD  
                    u501 0074                      u421 02FC                      u405 02A5  
                    u430 030A                      u431 0309                      u520 0089  
                    u440 0036                      u521 0088                      u505 0071  
                    u441 0035                      u530 008E                      u450 0041  
                    u531 008D                      u515 007D                      u451 0040  
                    u460 0052                      u380 0297                      u461 0051  
                    u381 0296                      u480 0064                      u720 021C  
                    u481 0063                      u721 021B                      u730 0225  
                    u475 0056                      u395 029E                      u731 0224  
                    u740 0233                      u741 0232                      u495 0065  
                    u757 0239                      u767 0203                      _isr 0101  
                    fsr0 0004                      indf 0000          ??_mostrar_valor 0072  
                   l1000 0293                     l1002 0297                     l1020 0303  
                   l1012 02F8                     l1004 02A4                     l1030 0036  
                   l1022 030A                     l1014 02F9                     l1006 02AB  
                   l1040 004A                     l1032 003B                     l1016 02FD  
                   l1008 02B1                     l1120 01BF                     l1050 0060  
                   l1042 004C                     l1034 003D                     l1026 002F  
                   l1018 0301                     l1130 01DE                     l1122 01C3  
                   l1060 0083                     l1052 0064                     l1044 0052  
                   l1036 0041                     l1028 0032                     l1140 01ED  
                   l1132 01E4                     l1124 01C4                     l1054 0075  
                   l1046 0055                     l1062 0089                     l1038 0046  
                   l1150 01FC                     l1142 01F1                     l1134 01E5  
                   l1126 01D7                     l1064 008E                     l1056 007B  
                   l1048 005C                     l1160 020E                     l1152 0206  
                   l1144 01F4                     l1136 01E6                     l1128 01DB  
                   l1066 0093                     l1058 007C                     l1162 020F  
                   l1154 0209                     l1146 01F5                     l1138 01E7  
                   l1250 021C                     l1164 0162                     l1156 020C  
                   l1148 01F9                     l1260 023C                     l1252 0225  
                   l1166 02DE                     l1158 020D                     l1254 022A  
                   l1262 023F                     l1246 0211                     l1264 0248  
                   l1256 0233                     l1248 0216                     l1258 0235  
                   ?_isr 0070                     i1l75 0157                     i1l93 0335  
                   i1l69 013F                     _TMR0 0001                     _main 0211  
                   _temp 007C                     btemp 007E                     start 0010  
      ___bmul@multiplier 002C              ?_RESET_TMR0 0070                    ??_isr 0024  
                  ?_main 0070           i1___awdiv@sign 0021          __end_of___awdiv 0098  
                  _ANSEL 0188          ___awdiv@divisor 002F                    i1l104 028E  
                  i1l194 02C2                    i1l347 0100                    i1l196 02DA  
                  _TABLA 0040          ___awdiv@counter 0034                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u60_20 00BB                    u60_21 00BA                    u61_25 00BF  
                  u62_20 00CD                    u54_20 02BC                    u70_20 011A  
                  u62_21 00CC                    u54_21 02BB                    u70_21 0119  
                  u71_20 0143                    u71_21 0142                    u63_25 00CE  
                  u55_25 02C3                    u64_20 00DE                    u64_21 00DD  
                  u64_25 00DA                    u56_25 02CA                    u57_20 02D6  
                  u57_21 02D5                    _TRISA 0085                    _TRISB 0086  
                  u65_25 00E6                    _TRISC 0087                    _TRISD 0088  
                  u66_20 00F2                    u58_20 009F                    u66_21 00F1  
                  u58_21 009E                    u67_20 00F7                    u59_20 00AA  
                  u67_21 00F6                    u59_21 00A9                    u68_20 0105  
                  u68_21 0104                    u69_20 010E                    u69_21 010D  
                  _setup 01BF                    pclath 000A         __end_ofi1___wmul 02DB  
                  status 0003      i1___wmul@multiplier 0070                    wtemp0 007E  
        __initialization 0013             __end_of_main 025C                   ??_main 003E  
                 _ADRESH 001E         ___awdiv@dividend 0031                   ?_setup 0070  
                 _ANSELH 0189                   i1l1200 00B5                   i1l1114 0330  
                 i1l1106 027B                   i1l1210 00CD                   i1l1202 00BB  
                 i1l1116 0334                   i1l1212 00DE                   i1l1204 00BE  
                 i1l1220 00F2                   i1l1070 025D                   i1l1222 00F7  
                 i1l1214 00E4                   i1l1206 00C5                   i1l1230 0105  
                 i1l1072 0263                   i1l1224 00FC                   i1l1216 00E5  
                 i1l1208 00C9                   i1l1240 0143                   i1l1232 010E  
                 i1l1090 0274                   i1l1082 026A                   i1l1074 0265  
                 i1l1218 00EC                   i1l1170 02B6                   i1l1242 0151  
                 i1l1234 0111                   i1l1092 0275                   i1l1084 026C  
                 i1l1076 0266                   i1l1180 02D6                   i1l1172 02B8  
                 i1l1236 011A                   i1l1228 0101                   i1l1078 0268  
                 i1l1190 00A4                   i1l1174 02BC                   i1l1238 013D  
                 i1l1096 0277                   i1l1088 0272                   i1l1192 00A6  
                 i1l1184 0098                   i1l1176 02C9                   i1l1098 0279  
                 i1l1194 00AA                   i1l1186 009B                   i1l1178 02D0  
                 i1l1196 00AF                   i1l1188 009F                   i1l1198 00B3  
                 i1l1296 0283             ?_set_display 0029                   ___bmul 02F5  
                 ___wmul 028F                ??___awdiv 0033         ___awdiv@quotient 0036  
      __end_ofi1___awdiv 0101                   saved_w 007E        RESET_TMR0@TMR_VAR 0070  
__end_of__initialization 002B      ___bmul@multiplicand 0029           __pcstackCOMMON 0070  
           __pidataBANK0 031F            __end_of_setup 0211                ?i1___wmul 0070  
         _OPTION_REGbits 0081                  ??_setup 0029               __pbssBANK0 0050  
    set_display@VALORES0 002C      set_display@VALORES1 0029      set_display@VALORES2 002A  
           ??_RESET_TMR0 0070               __pmaintext 0211                  ?___bmul 0029  
                ?___wmul 0029               __pintentry 0004               ??i1___wmul 0074  
     i1___awdiv@dividend 0078       __end_of_RESET_TMR0 0336    __end_of_mostrar_valor 028F  
     i1___awdiv@quotient 0022                  ___awdiv 002F    mostrar_valor@DISPLAY0 0074  
  mostrar_valor@DISPLAY1 0070    mostrar_valor@DISPLAY2 0071                  __ptext1 01BF  
                __ptext2 02DB                  __ptext3 0162                  __ptext4 028F  
                __ptext5 02F5                  __ptext6 002F                  __ptext7 0101  
                __ptext8 02B6                  __ptext9 0098                  _display 0050  
          _obtener_valor 0162                  _valores 0053     end_of_initialization 002B  
  i1___wmul@multiplicand 0072                _PORTDbits 0008           ?_obtener_valor 0038  
              i1___awdiv 0098           __end_of___bmul 030C           __end_of___wmul 02B6  
    start_initialization 0013              __end_of_isr 0162               ?i1___awdiv 0076  
               ??___bmul 002A                 ??___wmul 002D               init_fetch0 030C  
            __pdataBANK0 0040          ??_obtener_valor 003A              __pbssCOMMON 007B  
              ___latbits 0002            __pcstackBANK0 0020                _t_ADRESH2 0056  
               ?___awdiv 002F        i1___awdiv@divisor 0076        i1___awdiv@counter 0020  
            ??i1___awdiv 007A        interrupt_function 0004           ___wmul@product 002D  
               _PIE1bits 008C            ??_set_display 002B                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0029  
               i1___wmul 02B6      __end_of_set_display 02F5                 _banderas 007B  
               __ptext10 025C                 __ptext11 032F       obtener_valor@VALOR 0038  
          _mostrar_valor 025C               _INTCONbits 000B                 init_ram0 0310  
         ?_mostrar_valor 0070                 intlevel1 0000              _set_display 02DB  
             _OSCCONbits 008F               _RESET_TMR0 032F    __end_of_obtener_valor 01BF  
