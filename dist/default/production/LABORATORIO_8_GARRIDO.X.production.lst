

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Apr 20 17:42:37 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218                           
   219                           	psect	idataBANK0
   220  0253                     __pidataBANK0:
   221                           
   222                           ;initializer for _TABLA
   223  0253  343F               	retlw	63
   224  0254  3406               	retlw	6
   225  0255  345B               	retlw	91
   226  0256  344F               	retlw	79
   227  0257  3466               	retlw	102
   228  0258  346D               	retlw	109
   229  0259  347D               	retlw	125
   230  025A  3407               	retlw	7
   231  025B  347F               	retlw	127
   232  025C  346F               	retlw	111
   233  025D  3477               	retlw	119
   234  025E  347C               	retlw	124
   235  025F  3439               	retlw	57
   236  0260  345E               	retlw	94
   237  0261  3479               	retlw	121
   238  0262  3471               	retlw	113
   239  0008                     _PORTDbits	set	8
   240  0001                     _TMR0	set	1
   241  0008                     _PORTD	set	8
   242  0007                     _PORTC	set	7
   243  0005                     _PORTA	set	5
   244  000B                     _INTCONbits	set	11
   245  001E                     _ADRESH	set	30
   246  0006                     _PORTB	set	6
   247  001F                     _ADCON0bits	set	31
   248  000C                     _PIR1bits	set	12
   249  008C                     _PIE1bits	set	140
   250  009F                     _ADCON1bits	set	159
   251  0081                     _OPTION_REGbits	set	129
   252  008F                     _OSCCONbits	set	143
   253  0088                     _TRISD	set	136
   254  0087                     _TRISC	set	135
   255  0086                     _TRISB	set	134
   256  0085                     _TRISA	set	133
   257  0189                     _ANSELH	set	393
   258  0188                     _ANSEL	set	392
   259                           
   260                           	psect	cinit
   261  0011                     start_initialization:	
   262                           ; #config settings
   263                           
   264  0011                     __initialization:
   265                           
   266                           ; Initialize objects allocated to BANK0
   267  0011  1383               	bcf	3,7	;select IRP bank0
   268  0012  3046               	movlw	low (__pdataBANK0+16)
   269  0013  00FD               	movwf	btemp+-1
   270  0014  3002               	movlw	high __pidataBANK0
   271  0015  00FE               	movwf	btemp
   272  0016  3053               	movlw	low __pidataBANK0
   273  0017  00FF               	movwf	btemp+1
   274  0018  3036               	movlw	low __pdataBANK0
   275  0019  0084               	movwf	4
   276  001A  120A  118A  2244  120A  118A  	fcall	init_ram0
   277                           
   278                           ; Clear objects allocated to BANK0
   279  001F  01C6               	clrf	__pbssBANK0& (0+127)
   280  0020  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   281  0021  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   282  0022  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   283  0023  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   284  0024  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   285  0025  01CC               	clrf	(__pbssBANK0+6)& (0+127)
   286  0026  01CD               	clrf	(__pbssBANK0+7)& (0+127)
   287                           
   288                           ; Clear objects allocated to COMMON
   289  0027  01FA               	clrf	__pbssCOMMON& (0+127)
   290  0028  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   291  0029                     end_of_initialization:	
   292                           ;End of C runtime variable initialization code
   293                           
   294  0029                     __end_of__initialization:
   295  0029  0183               	clrf	3
   296  002A  120A  118A  28DC   	ljmp	_main	;jump to C main() function
   297                           
   298                           	psect	bssCOMMON
   299  007A                     __pbssCOMMON:
   300  007A                     _banderas:
   301  007A                     	ds	1
   302  007B                     _temp:
   303  007B                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306  0046                     __pbssBANK0:
   307  0046                     _display:
   308  0046                     	ds	3
   309  0049                     _valores:
   310  0049                     	ds	3
   311  004C                     _t_ADRESH2:
   312  004C                     	ds	2
   313                           
   314                           	psect	dataBANK0
   315  0036                     __pdataBANK0:
   316  0036                     _TABLA:
   317  0036                     	ds	16
   318                           
   319                           	psect	inittext
   320  0240                     init_fetch0:	
   321                           ;	Called with low address in FSR and high address in W
   322                           
   323  0240  087E               	movf	btemp,w
   324  0241  008A               	movwf	10
   325  0242  087F               	movf	btemp+1,w
   326  0243  0082               	movwf	2
   327  0244                     init_ram0:	
   328                           ;Called with:
   329                           ;	high address of idata address in btemp 
   330                           ;	low address of idata address in btemp+1 
   331                           ;	low address of data in FSR
   332                           ;	high address + 1 of data in btemp-1
   333                           
   334  0244  120A  118A  2240  120A  118A  	fcall	init_fetch0
   335  0249  0080               	movwf	0
   336  024A  0A84               	incf	4,f
   337  024B  0804               	movf	4,w
   338  024C  067D               	xorwf	btemp+-1,w
   339  024D  1903               	btfsc	3,2
   340  024E  3400               	retlw	0
   341  024F  0AFF               	incf	btemp+1,f
   342  0250  1903               	btfsc	3,2
   343  0251  0AFE               	incf	btemp,f
   344  0252  2A44               	goto	init_ram0
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:
   348  0070                     ?_mostrar_valor:
   349  0070                     ?_RESET_TMR0:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_RESET_TMR0:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_setup:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_isr:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_main:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     RESET_TMR0@TMR_VAR:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     mostrar_valor@DISPLAY1:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0070                     	ds	1
   373  0071                     mostrar_valor@DISPLAY2:
   374                           
   375                           ; 1 bytes @ 0x1
   376  0071                     	ds	1
   377  0072                     ??_mostrar_valor:
   378                           
   379                           ; 1 bytes @ 0x2
   380  0072                     	ds	2
   381  0074                     mostrar_valor@DISPLAY0:
   382                           
   383                           ; 1 bytes @ 0x4
   384  0074                     	ds	1
   385  0075                     ??_isr:
   386                           
   387                           ; 1 bytes @ 0x5
   388  0075                     	ds	5
   389                           
   390                           	psect	cstackBANK0
   391  0020                     __pcstackBANK0:
   392  0020                     ??_setup:
   393  0020                     ?_set_display:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0020                     ?___bmul:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0020                     ?___wmul:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0020                     set_display@VALORES1:	
   403                           ; 2 bytes @ 0x0
   404                           
   405  0020                     ___bmul@multiplicand:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0020                     ___wmul@multiplier:	
   409                           ; 1 bytes @ 0x0
   410                           
   411                           
   412                           ; 2 bytes @ 0x0
   413  0020                     	ds	1
   414  0021                     ??___bmul:
   415  0021                     set_display@VALORES2:	
   416                           ; 1 bytes @ 0x1
   417                           
   418                           
   419                           ; 1 bytes @ 0x1
   420  0021                     	ds	1
   421  0022                     ??_set_display:
   422  0022                     ___bmul@product:	
   423                           ; 1 bytes @ 0x2
   424                           
   425  0022                     ___wmul@multiplicand:	
   426                           ; 1 bytes @ 0x2
   427                           
   428                           
   429                           ; 2 bytes @ 0x2
   430  0022                     	ds	1
   431  0023                     set_display@VALORES0:
   432  0023                     ___bmul@multiplier:	
   433                           ; 1 bytes @ 0x3
   434                           
   435                           
   436                           ; 1 bytes @ 0x3
   437  0023                     	ds	1
   438  0024                     ??___wmul:
   439  0024                     ___wmul@product:	
   440                           ; 1 bytes @ 0x4
   441                           
   442                           
   443                           ; 2 bytes @ 0x4
   444  0024                     	ds	2
   445  0026                     ?___lwdiv:
   446  0026                     ___lwdiv@divisor:	
   447                           ; 2 bytes @ 0x6
   448                           
   449                           
   450                           ; 2 bytes @ 0x6
   451  0026                     	ds	2
   452  0028                     ___lwdiv@dividend:
   453                           
   454                           ; 2 bytes @ 0x8
   455  0028                     	ds	2
   456  002A                     ??___lwdiv:
   457                           
   458                           ; 1 bytes @ 0xA
   459  002A                     	ds	1
   460  002B                     ___lwdiv@quotient:
   461                           
   462                           ; 2 bytes @ 0xB
   463  002B                     	ds	2
   464  002D                     ___lwdiv@counter:
   465                           
   466                           ; 1 bytes @ 0xD
   467  002D                     	ds	1
   468  002E                     ?_obtener_valor:
   469  002E                     obtener_valor@VALOR:	
   470                           ; 1 bytes @ 0xE
   471                           
   472                           
   473                           ; 2 bytes @ 0xE
   474  002E                     	ds	2
   475  0030                     ??_obtener_valor:
   476                           
   477                           ; 1 bytes @ 0x10
   478  0030                     	ds	4
   479  0034                     ??_main:
   480                           
   481                           ; 1 bytes @ 0x14
   482  0034                     	ds	2
   483                           
   484                           	psect	maintext
   485  00DC                     __pmaintext:	
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 81 in file "main_lab8.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       2       0       0       0
   508 ;;      Totals:         0       2       0       0       0
   509 ;;Total ram usage:        2 bytes
   510 ;; Hardware stack levels required when called: 4
   511 ;; This function calls:
   512 ;;		_obtener_valor
   513 ;;		_set_display
   514 ;;		_setup
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520  00DC                     _main:	
   521                           ;psect for function _main
   522                           
   523  00DC                     l1094:	
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   526                           
   527                           
   528                           ;main_lab8.c: 82:     setup();
   529  00DC  120A  118A  208A  120A  118A  	fcall	_setup
   530  00E1                     l1096:
   531                           
   532                           ;main_lab8.c: 84:         if(ADCON0bits.GO == 0){
   533  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   534  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   535  00E3  189F               	btfsc	31,1	;volatile
   536  00E4  28E6               	goto	u381
   537  00E5  28E7               	goto	u380
   538  00E6                     u381:
   539  00E6  290A               	goto	l1110
   540  00E7                     u380:
   541  00E7                     l1098:
   542                           
   543                           ;main_lab8.c: 87:             if(ADCON0bits.CHS == 0b0000)
   544  00E7  0C1F               	rrf	31,w	;volatile
   545  00E8  00B4               	movwf	??_main
   546  00E9  0C34               	rrf	??_main,w
   547  00EA  390F               	andlw	15
   548  00EB  3A00               	xorlw	0
   549  00EC  1D03               	skipz
   550  00ED  28EF               	goto	u391
   551  00EE  28F0               	goto	u390
   552  00EF                     u391:
   553  00EF  28F5               	goto	l1102
   554  00F0                     u390:
   555  00F0                     l1100:
   556                           
   557                           ;main_lab8.c: 88:                 ADCON0bits.CHS = 0b0001;
   558  00F0  081F               	movf	31,w	;volatile
   559  00F1  39C3               	andlw	-61
   560  00F2  3804               	iorlw	4
   561  00F3  009F               	movwf	31	;volatile
   562  00F4  2900               	goto	l1106
   563  00F5                     l1102:
   564  00F5  0C1F               	rrf	31,w	;volatile
   565  00F6  00B4               	movwf	??_main
   566  00F7  0C34               	rrf	??_main,w
   567  00F8  390F               	andlw	15
   568  00F9  3A01               	xorlw	1
   569  00FA  1D03               	skipz
   570  00FB  28FD               	goto	u401
   571  00FC  28FE               	goto	u400
   572  00FD                     u401:
   573  00FD  2900               	goto	l1106
   574  00FE                     u400:
   575  00FE                     l1104:
   576                           
   577                           ;main_lab8.c: 90:                 ADCON0bits.CHS = 0b0000;
   578  00FE  30C3               	movlw	-61
   579  00FF  059F               	andwf	31,f	;volatile
   580  0100                     l1106:
   581                           
   582                           ;main_lab8.c: 91:             _delay((unsigned long)((40)*(4000000/4000000.0)));
   583  0100  300C               	movlw	12
   584  0101  1283               	bcf	3,5	;RP0=0, select bank0
   585  0102  1303               	bcf	3,6	;RP1=0, select bank0
   586  0103  00B4               	movwf	??_main
   587  0104                     u417:
   588  0104  0BB4               	decfsz	??_main,f
   589  0105  2904               	goto	u417
   590  0106  0000               	nop
   591  0107                     l1108:
   592                           
   593                           ;main_lab8.c: 93:             ADCON0bits.GO = 1;
   594  0107  1283               	bcf	3,5	;RP0=0, select bank0
   595  0108  1303               	bcf	3,6	;RP1=0, select bank0
   596  0109  149F               	bsf	31,1	;volatile
   597  010A                     l1110:
   598                           
   599                           ;main_lab8.c: 95:         obtener_valor(t_ADRESH2);
   600  010A  084D               	movf	_t_ADRESH2+1,w
   601  010B  00AF               	movwf	obtener_valor@VALOR+1
   602  010C  084C               	movf	_t_ADRESH2,w
   603  010D  00AE               	movwf	obtener_valor@VALOR
   604  010E  120A  118A  202D  120A  118A  	fcall	_obtener_valor
   605  0113                     l1112:
   606                           
   607                           ;main_lab8.c: 96:         set_display(valores[0],valores[1],valores[2]);
   608  0113  1283               	bcf	3,5	;RP0=0, select bank0
   609  0114  1303               	bcf	3,6	;RP1=0, select bank0
   610  0115  084A               	movf	_valores+1,w
   611  0116  00B4               	movwf	??_main
   612  0117  0834               	movf	??_main,w
   613  0118  00A0               	movwf	set_display@VALORES1
   614  0119  084B               	movf	_valores+2,w
   615  011A  00B5               	movwf	??_main+1
   616  011B  0835               	movf	??_main+1,w
   617  011C  00A1               	movwf	set_display@VALORES2
   618  011D  0849               	movf	_valores,w
   619  011E  120A  118A  220F  120A  118A  	fcall	_set_display
   620  0123  28E1               	goto	l1096
   621  0124  120A  118A  280E   	ljmp	start
   622  0127                     __end_of_main:
   623                           
   624                           	psect	text1
   625  008A                     __ptext1:	
   626 ;; *************** function _setup *****************
   627 ;; Defined at:
   628 ;;		line 104 in file "main_lab8.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       1       0       0       0
   645 ;;      Totals:         0       1       0       0       0
   646 ;;Total ram usage:        1 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 2
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656  008A                     _setup:	
   657                           ;psect for function _setup
   658                           
   659  008A                     l1026:	
   660                           ;incstack = 0
   661                           ; Regs used in _setup: [wreg+status,2+status,0]
   662                           
   663                           
   664                           ;main_lab8.c: 105:     ANSEL = 0b00000011;
   665  008A  3003               	movlw	3
   666  008B  1683               	bsf	3,5	;RP0=1, select bank3
   667  008C  1703               	bsf	3,6	;RP1=1, select bank3
   668  008D  0088               	movwf	8	;volatile
   669  008E                     l1028:
   670                           
   671                           ;main_lab8.c: 106:     ANSELH = 0;
   672  008E  0189               	clrf	9	;volatile
   673  008F                     l1030:
   674                           
   675                           ;main_lab8.c: 108:     TRISA = 0b00000011;
   676  008F  3003               	movlw	3
   677  0090  1683               	bsf	3,5	;RP0=1, select bank1
   678  0091  1303               	bcf	3,6	;RP1=0, select bank1
   679  0092  0085               	movwf	5	;volatile
   680                           
   681                           ;main_lab8.c: 109:     PORTA = 0;
   682  0093  1283               	bcf	3,5	;RP0=0, select bank0
   683  0094  1303               	bcf	3,6	;RP1=0, select bank0
   684  0095  0185               	clrf	5	;volatile
   685                           
   686                           ;main_lab8.c: 111:     TRISB = 0;
   687  0096  1683               	bsf	3,5	;RP0=1, select bank1
   688  0097  1303               	bcf	3,6	;RP1=0, select bank1
   689  0098  0186               	clrf	6	;volatile
   690                           
   691                           ;main_lab8.c: 112:     PORTB = 0;
   692  0099  1283               	bcf	3,5	;RP0=0, select bank0
   693  009A  1303               	bcf	3,6	;RP1=0, select bank0
   694  009B  0186               	clrf	6	;volatile
   695                           
   696                           ;main_lab8.c: 113:     TRISC = 0;
   697  009C  1683               	bsf	3,5	;RP0=1, select bank1
   698  009D  1303               	bcf	3,6	;RP1=0, select bank1
   699  009E  0187               	clrf	7	;volatile
   700                           
   701                           ;main_lab8.c: 114:     PORTC = 0;
   702  009F  1283               	bcf	3,5	;RP0=0, select bank0
   703  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   704  00A1  0187               	clrf	7	;volatile
   705  00A2                     l1032:
   706                           
   707                           ;main_lab8.c: 115:     TRISD = 0xF8;
   708  00A2  30F8               	movlw	248
   709  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   710  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   711  00A5  0088               	movwf	8	;volatile
   712  00A6                     l1034:
   713                           
   714                           ;main_lab8.c: 116:     PORTD = 0;
   715  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   716  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   717  00A8  0188               	clrf	8	;volatile
   718  00A9                     l1036:
   719                           
   720                           ;main_lab8.c: 119:     OSCCONbits.IRCF = 0b0110;
   721  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   722  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   723  00AB  080F               	movf	15,w	;volatile
   724  00AC  398F               	andlw	-113
   725  00AD  3860               	iorlw	96
   726  00AE  008F               	movwf	15	;volatile
   727  00AF                     l1038:
   728                           
   729                           ;main_lab8.c: 120:     OSCCONbits.SCS = 1;
   730  00AF  140F               	bsf	15,0	;volatile
   731  00B0                     l1040:
   732                           
   733                           ;main_lab8.c: 122:     OPTION_REGbits.T0CS = 0;
   734  00B0  1281               	bcf	1,5	;volatile
   735  00B1                     l1042:
   736                           
   737                           ;main_lab8.c: 123:     OPTION_REGbits.PSA = 0;
   738  00B1  1181               	bcf	1,3	;volatile
   739  00B2                     l1044:
   740                           
   741                           ;main_lab8.c: 124:     OPTION_REGbits.PS = 0b111;
   742  00B2  3007               	movlw	7
   743  00B3  0481               	iorwf	1,f	;volatile
   744                           
   745                           ;main_lab8.c: 125:     TMR0 = 254;
   746  00B4  30FE               	movlw	254
   747  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   748  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   749  00B7  0081               	movwf	1	;volatile
   750  00B8                     l1046:
   751                           
   752                           ;main_lab8.c: 128:     ADCON0bits.ADCS = 0b01;
   753  00B8  081F               	movf	31,w	;volatile
   754  00B9  393F               	andlw	-193
   755  00BA  3840               	iorlw	64
   756  00BB  009F               	movwf	31	;volatile
   757  00BC                     l1048:
   758                           
   759                           ;main_lab8.c: 129:     ADCON1bits.VCFG0 = 0;
   760  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   761  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   762  00BE  121F               	bcf	31,4	;volatile
   763  00BF                     l1050:
   764                           
   765                           ;main_lab8.c: 130:     ADCON1bits.VCFG1 = 0;
   766  00BF  129F               	bcf	31,5	;volatile
   767  00C0                     l1052:
   768                           
   769                           ;main_lab8.c: 131:     ADCON0bits.CHS = 0b0000;
   770  00C0  30C3               	movlw	-61
   771  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   772  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   773  00C3  059F               	andwf	31,f	;volatile
   774  00C4                     l1054:
   775                           
   776                           ;main_lab8.c: 132:     ADCON1bits.ADFM = 0;
   777  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   778  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   779  00C6  139F               	bcf	31,7	;volatile
   780  00C7                     l1056:
   781                           
   782                           ;main_lab8.c: 133:     ADCON0bits.ADON = 1;
   783  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   784  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   785  00C9  141F               	bsf	31,0	;volatile
   786                           
   787                           ;main_lab8.c: 134:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   788  00CA  300C               	movlw	12
   789  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   790  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   791  00CD  00A0               	movwf	??_setup
   792  00CE                     u427:
   793  00CE  0BA0               	decfsz	??_setup,f
   794  00CF  28CE               	goto	u427
   795  00D0  0000               	nop
   796  00D1                     l1058:
   797                           
   798                           ;main_lab8.c: 137:     PIR1bits.ADIF = 0;
   799  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   800  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   801  00D3  130C               	bcf	12,6	;volatile
   802  00D4                     l1060:
   803                           
   804                           ;main_lab8.c: 138:     PIE1bits.ADIE = 1;
   805  00D4  1683               	bsf	3,5	;RP0=1, select bank1
   806  00D5  1303               	bcf	3,6	;RP1=0, select bank1
   807  00D6  170C               	bsf	12,6	;volatile
   808  00D7                     l1062:
   809                           
   810                           ;main_lab8.c: 139:     INTCONbits.PEIE = 1;
   811  00D7  170B               	bsf	11,6	;volatile
   812  00D8                     l1064:
   813                           
   814                           ;main_lab8.c: 140:     INTCONbits.GIE = 1;
   815  00D8  178B               	bsf	11,7	;volatile
   816  00D9                     l1066:
   817                           
   818                           ;main_lab8.c: 141:     INTCONbits.T0IE = 1;
   819  00D9  168B               	bsf	11,5	;volatile
   820  00DA                     l1068:
   821                           
   822                           ;main_lab8.c: 142:     INTCONbits.T0IF = 0;
   823  00DA  110B               	bcf	11,2	;volatile
   824  00DB                     l90:
   825  00DB  0008               	return
   826  00DC                     __end_of_setup:
   827                           
   828                           	psect	text2
   829  020F                     __ptext2:	
   830 ;; *************** function _set_display *****************
   831 ;; Defined at:
   832 ;;		line 162 in file "main_lab8.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  VALORES0        1    wreg     unsigned char 
   835 ;;  VALORES1        1    0[BANK0 ] unsigned char 
   836 ;;  VALORES2        1    1[BANK0 ] unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  VALORES0        1    3[BANK0 ] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       2       0       0       0
   849 ;;      Locals:         0       1       0       0       0
   850 ;;      Temps:          0       1       0       0       0
   851 ;;      Totals:         0       4       0       0       0
   852 ;;Total ram usage:        4 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 2
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862  020F                     _set_display:	
   863                           ;psect for function _set_display
   864                           
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _set_display: [wreg-fsr0h+status,2+status,0]
   868                           ;set_display@VALORES0 stored from wreg
   869  020F  1283               	bcf	3,5	;RP0=0, select bank0
   870  0210  1303               	bcf	3,6	;RP1=0, select bank0
   871  0211  00A3               	movwf	set_display@VALORES0
   872  0212                     l1072:
   873                           
   874                           ;main_lab8.c: 163:     display[0] = TABLA[VALORES2];
   875  0212  0821               	movf	set_display@VALORES2,w
   876  0213  3E36               	addlw	(low (_TABLA| 0))& (0+255)
   877  0214  0084               	movwf	4
   878  0215  1383               	bcf	3,7	;select IRP bank0
   879  0216  0800               	movf	0,w
   880  0217  00A2               	movwf	??_set_display
   881  0218  0822               	movf	??_set_display,w
   882  0219  00C6               	movwf	_display
   883                           
   884                           ;main_lab8.c: 164:     display[1] = TABLA[VALORES1];
   885  021A  0820               	movf	set_display@VALORES1,w
   886  021B  3E36               	addlw	(low (_TABLA| 0))& (0+255)
   887  021C  0084               	movwf	4
   888  021D  0800               	movf	0,w
   889  021E  00A2               	movwf	??_set_display
   890  021F  0822               	movf	??_set_display,w
   891  0220  00C7               	movwf	_display+1
   892                           
   893                           ;main_lab8.c: 165:     display[2] = TABLA[VALORES0];
   894  0221  0823               	movf	set_display@VALORES0,w
   895  0222  3E36               	addlw	(low (_TABLA| 0))& (0+255)
   896  0223  0084               	movwf	4
   897  0224  0800               	movf	0,w
   898  0225  00A2               	movwf	??_set_display
   899  0226  0822               	movf	??_set_display,w
   900  0227  00C8               	movwf	_display+2
   901  0228                     l99:
   902  0228  0008               	return
   903  0229                     __end_of_set_display:
   904                           
   905                           	psect	text3
   906  002D                     __ptext3:	
   907 ;; *************** function _obtener_valor *****************
   908 ;; Defined at:
   909 ;;		line 156 in file "main_lab8.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  VALOR           2   14[BANK0 ] unsigned int 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       2       0       0       0
   924 ;;      Locals:         0       0       0       0       0
   925 ;;      Temps:          0       4       0       0       0
   926 ;;      Totals:         0       6       0       0       0
   927 ;;Total ram usage:        6 bytes
   928 ;; Hardware stack levels used: 1
   929 ;; Hardware stack levels required when called: 3
   930 ;; This function calls:
   931 ;;		___bmul
   932 ;;		___lwdiv
   933 ;;		___wmul
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939  002D                     _obtener_valor:	
   940                           ;psect for function _obtener_valor
   941                           
   942  002D                     l1070:	
   943                           ;incstack = 0
   944                           ; Regs used in _obtener_valor: [wreg+status,2+status,0+pclath+cstack]
   945                           
   946                           
   947                           ;main_lab8.c: 157:     valores[2] = VALOR/100;
   948  002D  3064               	movlw	100
   949  002E  1283               	bcf	3,5	;RP0=0, select bank0
   950  002F  1303               	bcf	3,6	;RP1=0, select bank0
   951  0030  00A6               	movwf	___lwdiv@divisor
   952  0031  3000               	movlw	0
   953  0032  00A7               	movwf	___lwdiv@divisor+1
   954  0033  082F               	movf	obtener_valor@VALOR+1,w
   955  0034  00A9               	movwf	___lwdiv@dividend+1
   956  0035  082E               	movf	obtener_valor@VALOR,w
   957  0036  00A8               	movwf	___lwdiv@dividend
   958  0037  120A  118A  216F  120A  118A  	fcall	___lwdiv
   959  003C  1283               	bcf	3,5	;RP0=0, select bank0
   960  003D  1303               	bcf	3,6	;RP1=0, select bank0
   961  003E  0826               	movf	?___lwdiv,w
   962  003F  00B0               	movwf	??_obtener_valor
   963  0040  0830               	movf	??_obtener_valor,w
   964  0041  00CB               	movwf	_valores+2
   965                           
   966                           ;main_lab8.c: 158:     valores[1] = (VALOR-valores[2]*100)/10;
   967  0042  300A               	movlw	10
   968  0043  00A6               	movwf	___lwdiv@divisor
   969  0044  3000               	movlw	0
   970  0045  00A7               	movwf	___lwdiv@divisor+1
   971  0046  084B               	movf	_valores+2,w
   972  0047  00B0               	movwf	??_obtener_valor
   973  0048  01B1               	clrf	??_obtener_valor+1
   974  0049  0830               	movf	??_obtener_valor,w
   975  004A  00A0               	movwf	___wmul@multiplier
   976  004B  0831               	movf	??_obtener_valor+1,w
   977  004C  00A1               	movwf	___wmul@multiplier+1
   978  004D  309C               	movlw	156
   979  004E  00A2               	movwf	___wmul@multiplicand
   980  004F  30FF               	movlw	255
   981  0050  00A3               	movwf	___wmul@multiplicand+1
   982  0051  120A  118A  21E8  120A  118A  	fcall	___wmul
   983  0056  1283               	bcf	3,5	;RP0=0, select bank0
   984  0057  1303               	bcf	3,6	;RP1=0, select bank0
   985  0058  082E               	movf	obtener_valor@VALOR,w
   986  0059  0720               	addwf	?___wmul,w
   987  005A  00A8               	movwf	___lwdiv@dividend
   988  005B  082F               	movf	obtener_valor@VALOR+1,w
   989  005C  1803               	skipnc
   990  005D  0A2F               	incf	obtener_valor@VALOR+1,w
   991  005E  0721               	addwf	?___wmul+1,w
   992  005F  00A9               	movwf	___lwdiv@dividend+1
   993  0060  120A  118A  216F  120A  118A  	fcall	___lwdiv
   994  0065  1283               	bcf	3,5	;RP0=0, select bank0
   995  0066  1303               	bcf	3,6	;RP1=0, select bank0
   996  0067  0826               	movf	?___lwdiv,w
   997  0068  00B2               	movwf	??_obtener_valor+2
   998  0069  0832               	movf	??_obtener_valor+2,w
   999  006A  00CA               	movwf	_valores+1
  1000                           
  1001                           ;main_lab8.c: 159:     valores[0] = VALOR-valores[2]*100-valores[1]*10;
  1002  006B  309C               	movlw	156
  1003  006C  00B0               	movwf	??_obtener_valor
  1004  006D  0830               	movf	??_obtener_valor,w
  1005  006E  00A0               	movwf	___bmul@multiplicand
  1006  006F  084B               	movf	_valores+2,w
  1007  0070  120A  118A  2229  120A  118A  	fcall	___bmul
  1008  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0077  00B1               	movwf	??_obtener_valor+1
  1011  0078  30F6               	movlw	246
  1012  0079  00B2               	movwf	??_obtener_valor+2
  1013  007A  0832               	movf	??_obtener_valor+2,w
  1014  007B  00A0               	movwf	___bmul@multiplicand
  1015  007C  084A               	movf	_valores+1,w
  1016  007D  120A  118A  2229  120A  118A  	fcall	___bmul
  1017  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0084  0731               	addwf	??_obtener_valor+1,w
  1020  0085  072E               	addwf	obtener_valor@VALOR,w
  1021  0086  00B3               	movwf	??_obtener_valor+3
  1022  0087  0833               	movf	??_obtener_valor+3,w
  1023  0088  00C9               	movwf	_valores
  1024  0089                     l96:
  1025  0089  0008               	return
  1026  008A                     __end_of_obtener_valor:
  1027                           
  1028                           	psect	text4
  1029  01E8                     __ptext4:	
  1030 ;; *************** function ___wmul *****************
  1031 ;; Defined at:
  1032 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1035 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  product         2    4[BANK0 ] unsigned int 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  2    0[BANK0 ] unsigned int 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       4       0       0       0
  1048 ;;      Locals:         0       2       0       0       0
  1049 ;;      Temps:          0       0       0       0       0
  1050 ;;      Totals:         0       6       0       0       0
  1051 ;;Total ram usage:        6 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 2
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_obtener_valor
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061  01E8                     ___wmul:	
  1062                           ;psect for function ___wmul
  1063                           
  1064  01E8                     l922:	
  1065                           ;incstack = 0
  1066                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1067                           
  1068  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1069  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1070  01EA  01A4               	clrf	___wmul@product
  1071  01EB  01A5               	clrf	___wmul@product+1
  1072  01EC                     l924:
  1073  01EC  1C20               	btfss	___wmul@multiplier,0
  1074  01ED  29EF               	goto	u211
  1075  01EE  29F0               	goto	u210
  1076  01EF                     u211:
  1077  01EF  29F6               	goto	l194
  1078  01F0                     u210:
  1079  01F0                     l926:
  1080  01F0  0822               	movf	___wmul@multiplicand,w
  1081  01F1  07A4               	addwf	___wmul@product,f
  1082  01F2  1803               	skipnc
  1083  01F3  0AA5               	incf	___wmul@product+1,f
  1084  01F4  0823               	movf	___wmul@multiplicand+1,w
  1085  01F5  07A5               	addwf	___wmul@product+1,f
  1086  01F6                     l194:
  1087  01F6  3001               	movlw	1
  1088  01F7                     u225:
  1089  01F7  1003               	clrc
  1090  01F8  0DA2               	rlf	___wmul@multiplicand,f
  1091  01F9  0DA3               	rlf	___wmul@multiplicand+1,f
  1092  01FA  3EFF               	addlw	-1
  1093  01FB  1D03               	skipz
  1094  01FC  29F7               	goto	u225
  1095  01FD                     l928:
  1096  01FD  3001               	movlw	1
  1097  01FE                     u235:
  1098  01FE  1003               	clrc
  1099  01FF  0CA1               	rrf	___wmul@multiplier+1,f
  1100  0200  0CA0               	rrf	___wmul@multiplier,f
  1101  0201  3EFF               	addlw	-1
  1102  0202  1D03               	skipz
  1103  0203  29FE               	goto	u235
  1104  0204                     l930:
  1105  0204  0820               	movf	___wmul@multiplier,w
  1106  0205  0421               	iorwf	___wmul@multiplier+1,w
  1107  0206  1D03               	btfss	3,2
  1108  0207  2A09               	goto	u241
  1109  0208  2A0A               	goto	u240
  1110  0209                     u241:
  1111  0209  29EC               	goto	l924
  1112  020A                     u240:
  1113  020A                     l932:
  1114  020A  0825               	movf	___wmul@product+1,w
  1115  020B  00A1               	movwf	?___wmul+1
  1116  020C  0824               	movf	___wmul@product,w
  1117  020D  00A0               	movwf	?___wmul
  1118  020E                     l196:
  1119  020E  0008               	return
  1120  020F                     __end_of___wmul:
  1121                           
  1122                           	psect	text5
  1123  016F                     __ptext5:	
  1124 ;; *************** function ___lwdiv *****************
  1125 ;; Defined at:
  1126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  divisor         2    6[BANK0 ] unsigned int 
  1129 ;;  dividend        2    8[BANK0 ] unsigned int 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  quotient        2   11[BANK0 ] unsigned int 
  1132 ;;  counter         1   13[BANK0 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    6[BANK0 ] unsigned int 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       4       0       0       0
  1143 ;;      Locals:         0       3       0       0       0
  1144 ;;      Temps:          0       1       0       0       0
  1145 ;;      Totals:         0       8       0       0       0
  1146 ;;Total ram usage:        8 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 2
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_obtener_valor
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156  016F                     ___lwdiv:	
  1157                           ;psect for function ___lwdiv
  1158                           
  1159  016F                     l950:	
  1160                           ;incstack = 0
  1161                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1162                           
  1163  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0171  01AB               	clrf	___lwdiv@quotient
  1166  0172  01AC               	clrf	___lwdiv@quotient+1
  1167  0173                     l952:
  1168  0173  0826               	movf	___lwdiv@divisor,w
  1169  0174  0427               	iorwf	___lwdiv@divisor+1,w
  1170  0175  1903               	btfsc	3,2
  1171  0176  2978               	goto	u271
  1172  0177  2979               	goto	u270
  1173  0178                     u271:
  1174  0178  29B0               	goto	l972
  1175  0179                     u270:
  1176  0179                     l954:
  1177  0179  01AD               	clrf	___lwdiv@counter
  1178  017A  0AAD               	incf	___lwdiv@counter,f
  1179  017B  2987               	goto	l960
  1180  017C                     l956:
  1181  017C  3001               	movlw	1
  1182  017D                     u285:
  1183  017D  1003               	clrc
  1184  017E  0DA6               	rlf	___lwdiv@divisor,f
  1185  017F  0DA7               	rlf	___lwdiv@divisor+1,f
  1186  0180  3EFF               	addlw	-1
  1187  0181  1D03               	skipz
  1188  0182  297D               	goto	u285
  1189  0183                     l958:
  1190  0183  3001               	movlw	1
  1191  0184  00AA               	movwf	??___lwdiv
  1192  0185  082A               	movf	??___lwdiv,w
  1193  0186  07AD               	addwf	___lwdiv@counter,f
  1194  0187                     l960:
  1195  0187  1FA7               	btfss	___lwdiv@divisor+1,7
  1196  0188  298A               	goto	u291
  1197  0189  298B               	goto	u290
  1198  018A                     u291:
  1199  018A  297C               	goto	l956
  1200  018B                     u290:
  1201  018B                     l962:
  1202  018B  3001               	movlw	1
  1203  018C                     u305:
  1204  018C  1003               	clrc
  1205  018D  0DAB               	rlf	___lwdiv@quotient,f
  1206  018E  0DAC               	rlf	___lwdiv@quotient+1,f
  1207  018F  3EFF               	addlw	-1
  1208  0190  1D03               	skipz
  1209  0191  298C               	goto	u305
  1210  0192  0827               	movf	___lwdiv@divisor+1,w
  1211  0193  0229               	subwf	___lwdiv@dividend+1,w
  1212  0194  1D03               	skipz
  1213  0195  2998               	goto	u315
  1214  0196  0826               	movf	___lwdiv@divisor,w
  1215  0197  0228               	subwf	___lwdiv@dividend,w
  1216  0198                     u315:
  1217  0198  1C03               	skipc
  1218  0199  299B               	goto	u311
  1219  019A  299C               	goto	u310
  1220  019B                     u311:
  1221  019B  29A3               	goto	l968
  1222  019C                     u310:
  1223  019C                     l964:
  1224  019C  0826               	movf	___lwdiv@divisor,w
  1225  019D  02A8               	subwf	___lwdiv@dividend,f
  1226  019E  0827               	movf	___lwdiv@divisor+1,w
  1227  019F  1C03               	skipc
  1228  01A0  03A9               	decf	___lwdiv@dividend+1,f
  1229  01A1  02A9               	subwf	___lwdiv@dividend+1,f
  1230  01A2                     l966:
  1231  01A2  142B               	bsf	___lwdiv@quotient,0
  1232  01A3                     l968:
  1233  01A3  3001               	movlw	1
  1234  01A4                     u325:
  1235  01A4  1003               	clrc
  1236  01A5  0CA7               	rrf	___lwdiv@divisor+1,f
  1237  01A6  0CA6               	rrf	___lwdiv@divisor,f
  1238  01A7  3EFF               	addlw	-1
  1239  01A8  1D03               	skipz
  1240  01A9  29A4               	goto	u325
  1241  01AA                     l970:
  1242  01AA  3001               	movlw	1
  1243  01AB  02AD               	subwf	___lwdiv@counter,f
  1244  01AC  1D03               	btfss	3,2
  1245  01AD  29AF               	goto	u331
  1246  01AE  29B0               	goto	u330
  1247  01AF                     u331:
  1248  01AF  298B               	goto	l962
  1249  01B0                     u330:
  1250  01B0                     l972:
  1251  01B0  082C               	movf	___lwdiv@quotient+1,w
  1252  01B1  00A7               	movwf	?___lwdiv+1
  1253  01B2  082B               	movf	___lwdiv@quotient,w
  1254  01B3  00A6               	movwf	?___lwdiv
  1255  01B4                     l466:
  1256  01B4  0008               	return
  1257  01B5                     __end_of___lwdiv:
  1258                           
  1259                           	psect	text6
  1260  0229                     __ptext6:	
  1261 ;; *************** function ___bmul *****************
  1262 ;; Defined at:
  1263 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  multiplier      1    wreg     unsigned char 
  1266 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1269 ;;  product         1    2[BANK0 ] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      unsigned char 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       1       0       0       0
  1280 ;;      Locals:         0       2       0       0       0
  1281 ;;      Temps:          0       1       0       0       0
  1282 ;;      Totals:         0       4       0       0       0
  1283 ;;Total ram usage:        4 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 2
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_obtener_valor
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293  0229                     ___bmul:	
  1294                           ;psect for function ___bmul
  1295                           
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1299                           ;___bmul@multiplier stored from wreg
  1300  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1301  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1302  022B  00A3               	movwf	___bmul@multiplier
  1303  022C                     l936:
  1304  022C  01A2               	clrf	___bmul@product
  1305  022D                     l938:
  1306  022D  1C23               	btfss	___bmul@multiplier,0
  1307  022E  2A30               	goto	u251
  1308  022F  2A31               	goto	u250
  1309  0230                     u251:
  1310  0230  2A35               	goto	l942
  1311  0231                     u250:
  1312  0231                     l940:
  1313  0231  0820               	movf	___bmul@multiplicand,w
  1314  0232  00A1               	movwf	??___bmul
  1315  0233  0821               	movf	??___bmul,w
  1316  0234  07A2               	addwf	___bmul@product,f
  1317  0235                     l942:
  1318  0235  1003               	clrc
  1319  0236  0DA0               	rlf	___bmul@multiplicand,f
  1320  0237                     l944:
  1321  0237  1003               	clrc
  1322  0238  0CA3               	rrf	___bmul@multiplier,f
  1323  0239  0823               	movf	___bmul@multiplier,w
  1324  023A  1D03               	btfss	3,2
  1325  023B  2A3D               	goto	u261
  1326  023C  2A3E               	goto	u260
  1327  023D                     u261:
  1328  023D  2A2D               	goto	l938
  1329  023E                     u260:
  1330  023E                     l946:
  1331  023E  0822               	movf	___bmul@product,w
  1332  023F                     l220:
  1333  023F  0008               	return
  1334  0240                     __end_of___bmul:
  1335                           
  1336                           	psect	text7
  1337  0127                     __ptext7:	
  1338 ;; *************** function _isr *****************
  1339 ;; Defined at:
  1340 ;;		line 59 in file "main_lab8.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         0       0       0       0       0
  1356 ;;      Temps:          5       0       0       0       0
  1357 ;;      Totals:         5       0       0       0       0
  1358 ;;Total ram usage:        5 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 1
  1361 ;; This function calls:
  1362 ;;		_RESET_TMR0
  1363 ;;		_mostrar_valor
  1364 ;; This function is called by:
  1365 ;;		Interrupt level 1
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369  0127                     _isr:	
  1370                           ;psect for function _isr
  1371                           
  1372  0127                     i1l1076:
  1373                           
  1374                           ;main_lab8.c: 60:     if(PIR1bits.ADIF){
  1375  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0129  1F0C               	btfss	12,6	;volatile
  1378  012A  292C               	goto	u34_21
  1379  012B  292D               	goto	u34_20
  1380  012C                     u34_21:
  1381  012C  294E               	goto	i1l69
  1382  012D                     u34_20:
  1383  012D                     i1l1078:
  1384                           
  1385                           ;main_lab8.c: 61:         if(ADCON0bits.CHS == 0){
  1386  012D  0C1F               	rrf	31,w	;volatile
  1387  012E  00F5               	movwf	??_isr
  1388  012F  0C75               	rrf	??_isr,w
  1389  0130  390F               	andlw	15
  1390  0131  3A00               	xorlw	0
  1391  0132  1D03               	skipz
  1392  0133  2935               	goto	u35_21
  1393  0134  2936               	goto	u35_20
  1394  0135                     u35_21:
  1395  0135  2939               	goto	i1l1082
  1396  0136                     u35_20:
  1397  0136                     i1l1080:
  1398                           
  1399                           ;main_lab8.c: 62:             PORTB = ADRESH;
  1400  0136  081E               	movf	30,w	;volatile
  1401  0137  0086               	movwf	6	;volatile
  1402                           
  1403                           ;main_lab8.c: 63:         }
  1404  0138  294C               	goto	i1l1086
  1405  0139                     i1l1082:
  1406  0139  0C1F               	rrf	31,w	;volatile
  1407  013A  00F5               	movwf	??_isr
  1408  013B  0C75               	rrf	??_isr,w
  1409  013C  390F               	andlw	15
  1410  013D  3A01               	xorlw	1
  1411  013E  1D03               	skipz
  1412  013F  2941               	goto	u36_21
  1413  0140  2942               	goto	u36_20
  1414  0141                     u36_21:
  1415  0141  294C               	goto	i1l1086
  1416  0142                     u36_20:
  1417  0142                     i1l1084:
  1418                           
  1419                           ;main_lab8.c: 66:             t_ADRESH2 = (ADRESH*2);
  1420  0142  081E               	movf	30,w	;volatile
  1421  0143  00F5               	movwf	??_isr
  1422  0144  01F6               	clrf	??_isr+1
  1423  0145  1003               	clrc
  1424  0146  0DF5               	rlf	??_isr,f
  1425  0147  0DF6               	rlf	??_isr+1,f
  1426  0148  0875               	movf	??_isr,w
  1427  0149  00CC               	movwf	_t_ADRESH2
  1428  014A  0876               	movf	??_isr+1,w
  1429  014B  00CD               	movwf	_t_ADRESH2+1
  1430  014C                     i1l1086:
  1431                           
  1432                           ;main_lab8.c: 68:         PIR1bits.ADIF = 0;
  1433  014C  130C               	bcf	12,6	;volatile
  1434                           
  1435                           ;main_lab8.c: 69:     }
  1436  014D  2966               	goto	i1l75
  1437  014E                     i1l69:	
  1438                           ;main_lab8.c: 70:     else if (INTCONbits.T0IF){
  1439                           
  1440  014E  1D0B               	btfss	11,2	;volatile
  1441  014F  2951               	goto	u37_21
  1442  0150  2952               	goto	u37_20
  1443  0151                     u37_21:
  1444  0151  2966               	goto	i1l75
  1445  0152                     u37_20:
  1446  0152                     i1l1088:
  1447                           
  1448                           ;main_lab8.c: 72:         mostrar_valor(display[0],display[1],display[2]);
  1449  0152  0847               	movf	_display+1,w
  1450  0153  00F5               	movwf	??_isr
  1451  0154  0875               	movf	??_isr,w
  1452  0155  00F0               	movwf	mostrar_valor@DISPLAY1
  1453  0156  0848               	movf	_display+2,w
  1454  0157  00F6               	movwf	??_isr+1
  1455  0158  0876               	movf	??_isr+1,w
  1456  0159  00F1               	movwf	mostrar_valor@DISPLAY2
  1457  015A  0846               	movf	_display,w
  1458  015B  120A  118A  21B5  120A  118A  	fcall	_mostrar_valor
  1459  0160                     i1l1090:
  1460                           
  1461                           ;main_lab8.c: 73:         RESET_TMR0(254);
  1462  0160  30FE               	movlw	254
  1463  0161  120A  118A  2263  120A  118A  	fcall	_RESET_TMR0
  1464  0166                     i1l75:
  1465  0166  0879               	movf	??_isr+4,w
  1466  0167  008A               	movwf	10
  1467  0168  0878               	movf	??_isr+3,w
  1468  0169  0084               	movwf	4
  1469  016A  0E77               	swapf	??_isr+2,w
  1470  016B  0083               	movwf	3
  1471  016C  0EFE               	swapf	btemp,f
  1472  016D  0E7E               	swapf	btemp,w
  1473  016E  0009               	retfie
  1474  016F                     __end_of_isr:
  1475                           
  1476                           	psect	intentry
  1477  0004                     __pintentry:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1480                           
  1481  0004                     interrupt_function:
  1482  007E                     saved_w	set	btemp
  1483  0004  00FE               	movwf	btemp
  1484  0005  0E03               	swapf	3,w
  1485  0006  00F7               	movwf	??_isr+2
  1486  0007  0804               	movf	4,w
  1487  0008  00F8               	movwf	??_isr+3
  1488  0009  080A               	movf	10,w
  1489  000A  00F9               	movwf	??_isr+4
  1490  000B  120A  118A  2927   	ljmp	_isr
  1491                           
  1492                           	psect	text8
  1493  01B5                     __ptext8:	
  1494 ;; *************** function _mostrar_valor *****************
  1495 ;; Defined at:
  1496 ;;		line 169 in file "main_lab8.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  DISPLAY0        1    wreg     unsigned char 
  1499 ;;  DISPLAY1        1    0[COMMON] unsigned char 
  1500 ;;  DISPLAY2        1    1[COMMON] unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  DISPLAY0        1    4[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         2       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0
  1514 ;;      Temps:          2       0       0       0       0
  1515 ;;      Totals:         5       0       0       0       0
  1516 ;;Total ram usage:        5 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_isr
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525  01B5                     _mostrar_valor:	
  1526                           ;psect for function _mostrar_valor
  1527                           
  1528                           
  1529                           ;incstack = 0
  1530                           ; Regs used in _mostrar_valor: [wreg-fsr0h+status,2+status,0]
  1531                           ;mostrar_valor@DISPLAY0 stored from wreg
  1532  01B5  00F4               	movwf	mostrar_valor@DISPLAY0
  1533  01B6                     i1l976:
  1534                           
  1535                           ;main_lab8.c: 171:     PORTDbits.RD0 = 0;
  1536  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1537  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1538  01B8  1008               	bcf	8,0	;volatile
  1539                           
  1540                           ;main_lab8.c: 172:     PORTDbits.RD1 = 0;
  1541  01B9  1088               	bcf	8,1	;volatile
  1542                           
  1543                           ;main_lab8.c: 173:     PORTDbits.RD2 = 0;
  1544  01BA  1108               	bcf	8,2	;volatile
  1545                           
  1546                           ;main_lab8.c: 175:     switch (banderas)
  1547  01BB  29D4               	goto	i1l1012
  1548  01BC                     i1l978:
  1549                           
  1550                           ;main_lab8.c: 178:             PORTC = DISPLAY0;
  1551  01BC  0874               	movf	mostrar_valor@DISPLAY0,w
  1552  01BD  0087               	movwf	7	;volatile
  1553  01BE                     i1l980:
  1554                           
  1555                           ;main_lab8.c: 179:             PORTDbits.RD0 = 1;
  1556  01BE  1408               	bsf	8,0	;volatile
  1557  01BF                     i1l982:
  1558                           
  1559                           ;main_lab8.c: 180:             banderas = 1;
  1560  01BF  01FA               	clrf	_banderas
  1561  01C0  0AFA               	incf	_banderas,f
  1562  01C1                     i1l984:
  1563                           
  1564                           ;main_lab8.c: 181:             PORTDbits.RD7 = 1;
  1565  01C1  1788               	bsf	8,7	;volatile
  1566  01C2  29E7               	goto	i1l104
  1567  01C3                     i1l988:
  1568                           
  1569                           ;main_lab8.c: 184:             PORTC = DISPLAY1;
  1570  01C3  0870               	movf	mostrar_valor@DISPLAY1,w
  1571  01C4  0087               	movwf	7	;volatile
  1572  01C5                     i1l990:
  1573                           
  1574                           ;main_lab8.c: 185:             PORTDbits.RD1 = 1;
  1575  01C5  1488               	bsf	8,1	;volatile
  1576                           
  1577                           ;main_lab8.c: 186:             banderas = 2;
  1578  01C6  3002               	movlw	2
  1579  01C7  00F2               	movwf	??_mostrar_valor
  1580  01C8  0872               	movf	??_mostrar_valor,w
  1581  01C9  00FA               	movwf	_banderas
  1582  01CA  29E7               	goto	i1l104
  1583  01CB                     i1l994:
  1584                           
  1585                           ;main_lab8.c: 189:             PORTC = DISPLAY2;
  1586  01CB  0871               	movf	mostrar_valor@DISPLAY2,w
  1587  01CC  0087               	movwf	7	;volatile
  1588  01CD                     i1l996:
  1589                           
  1590                           ;main_lab8.c: 190:             PORTDbits.RD2 = 1;
  1591  01CD  1508               	bsf	8,2	;volatile
  1592  01CE                     i1l998:
  1593                           
  1594                           ;main_lab8.c: 191:             banderas = 0;
  1595  01CE  01FA               	clrf	_banderas
  1596  01CF  29E7               	goto	i1l104
  1597  01D0                     i1l1002:
  1598                           
  1599                           ;main_lab8.c: 194:             PORTC = 0b10000000;
  1600  01D0  3080               	movlw	128
  1601  01D1  0087               	movwf	7	;volatile
  1602  01D2                     i1l1004:
  1603                           
  1604                           ;main_lab8.c: 195:             PORTDbits.RD0 = 1;
  1605  01D2  1408               	bsf	8,0	;volatile
  1606  01D3  29CE               	goto	i1l998
  1607  01D4                     i1l1012:
  1608  01D4  087A               	movf	_banderas,w
  1609  01D5  00F2               	movwf	??_mostrar_valor
  1610  01D6  01F3               	clrf	??_mostrar_valor+1
  1611                           
  1612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 1, Range of values is 0 to 0
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte            4     3 (average)
  1618                           ; direct_byte           11     8 (fixed)
  1619                           ; jumptable            260     6 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621  01D7  0873               	movf	??_mostrar_valor+1,w
  1622  01D8  3A00               	xorlw	0	; case 0
  1623  01D9  1903               	skipnz
  1624  01DA  29DC               	goto	i1l1144
  1625  01DB  29D0               	goto	i1l1002
  1626  01DC                     i1l1144:
  1627                           
  1628                           ; Switch size 1, requested type "simple"
  1629                           ; Number of cases is 3, Range of values is 0 to 2
  1630                           ; switch strategies available:
  1631                           ; Name         Instructions Cycles
  1632                           ; simple_byte           10     6 (average)
  1633                           ; direct_byte           17     8 (fixed)
  1634                           ; jumptable            260     6 (fixed)
  1635                           ;	Chosen strategy is simple_byte
  1636  01DC  0872               	movf	??_mostrar_valor,w
  1637  01DD  3A00               	xorlw	0	; case 0
  1638  01DE  1903               	skipnz
  1639  01DF  29BC               	goto	i1l978
  1640  01E0  3A01               	xorlw	1	; case 1
  1641  01E1  1903               	skipnz
  1642  01E2  29C3               	goto	i1l988
  1643  01E3  3A03               	xorlw	3	; case 2
  1644  01E4  1903               	skipnz
  1645  01E5  29CB               	goto	i1l994
  1646  01E6  29D0               	goto	i1l1002
  1647  01E7                     i1l104:
  1648  01E7  0008               	return
  1649  01E8                     __end_of_mostrar_valor:
  1650                           
  1651                           	psect	text9
  1652  0263                     __ptext9:	
  1653 ;; *************** function _RESET_TMR0 *****************
  1654 ;; Defined at:
  1655 ;;		line 150 in file "main_lab8.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  TMR_VAR         1    wreg     unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  TMR_VAR         1    0[COMMON] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0
  1672 ;;      Totals:         1       0       0       0       0
  1673 ;;Total ram usage:        1 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_isr
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682  0263                     _RESET_TMR0:	
  1683                           ;psect for function _RESET_TMR0
  1684                           
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _RESET_TMR0: [wreg]
  1688                           ;RESET_TMR0@TMR_VAR stored from wreg
  1689  0263  00F0               	movwf	RESET_TMR0@TMR_VAR
  1690  0264                     i1l1020:
  1691                           
  1692                           ;main_lab8.c: 151:     TMR0 = TMR_VAR;
  1693  0264  0870               	movf	RESET_TMR0@TMR_VAR,w
  1694  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0267  0081               	movwf	1	;volatile
  1697  0268                     i1l1022:
  1698                           
  1699                           ;main_lab8.c: 152:     INTCONbits.T0IF = 0;
  1700  0268  110B               	bcf	11,2	;volatile
  1701  0269                     i1l93:
  1702  0269  0008               	return
  1703  026A                     __end_of_RESET_TMR0:
  1704  007E                     btemp	set	126	;btemp
  1705  007E                     wtemp0	set	126
  1706                           
  1707                           	psect	idloc
  1708                           
  1709                           ;Config register IDLOC0 @ 0x2000
  1710                           ;	unspecified, using default values
  1711  2000                     	org	8192
  1712  2000  3FFF               	dw	16383
  1713                           
  1714                           ;Config register IDLOC1 @ 0x2001
  1715                           ;	unspecified, using default values
  1716  2001                     	org	8193
  1717  2001  3FFF               	dw	16383
  1718                           
  1719                           ;Config register IDLOC2 @ 0x2002
  1720                           ;	unspecified, using default values
  1721  2002                     	org	8194
  1722  2002  3FFF               	dw	16383
  1723                           
  1724                           ;Config register IDLOC3 @ 0x2003
  1725                           ;	unspecified, using default values
  1726  2003                     	org	8195
  1727  2003  3FFF               	dw	16383
  1728                           
  1729                           	psect	config
  1730                           
  1731                           ;Config register CONFIG1 @ 0x2007
  1732                           ;	Oscillator Selection bits
  1733                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1734                           ;	Watchdog Timer Enable bit
  1735                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1736                           ;	Power-up Timer Enable bit
  1737                           ;	PWRTE = OFF, PWRT disabled
  1738                           ;	RE3/MCLR pin function select bit
  1739                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1740                           ;	Code Protection bit
  1741                           ;	CP = OFF, Program memory code protection is disabled
  1742                           ;	Data Code Protection bit
  1743                           ;	CPD = OFF, Data memory code protection is disabled
  1744                           ;	Brown Out Reset Selection bits
  1745                           ;	BOREN = OFF, BOR disabled
  1746                           ;	Internal External Switchover bit
  1747                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1748                           ;	Fail-Safe Clock Monitor Enabled bit
  1749                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1750                           ;	Low Voltage Programming Enable bit
  1751                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1752                           ;	In-Circuit Debugger Mode bit
  1753                           ;	DEBUG = 0x1, unprogrammed default
  1754  2007                     	org	8199
  1755  2007  20D4               	dw	8404
  1756                           
  1757                           ;Config register CONFIG2 @ 0x2008
  1758                           ;	Brown-out Reset Selection bit
  1759                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1760                           ;	Flash Program Memory Self Write Enable bits
  1761                           ;	WRT = OFF, Write protection off
  1762  2008                     	org	8200
  1763  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_mostrar_valor

Critical Paths under _main in BANK0

    _main->_obtener_valor
    _obtener_valor->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1314
                                             20 BANK0      2     2      0
                      _obtener_valor
                        _set_display
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_display                                          4     2      2     218
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _obtener_valor                                        6     4      2    1096
                                             14 BANK0      6     4      2
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     240
                                              5 COMMON     5     5      0
                         _RESET_TMR0
                      _mostrar_valor
 ---------------------------------------------------------------------------------
 (4) _mostrar_valor                                        5     3      2     218
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _RESET_TMR0                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _obtener_valor
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
   _set_display
   _setup

 _isr (ROOT)
   _RESET_TMR0
   _mostrar_valor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Apr 20 17:42:37 2022

                      pc 0002           ___bmul@product 0022                       l90 00DB  
                     l96 0089                       l99 0228                       fsr 0004  
    ___wmul@multiplicand 0022                      l220 023F                      l194 01F6  
                    l196 020E                      l466 01B4                      l930 0204  
                    l922 01E8                      l940 0231                      l932 020A  
                    l924 01EC                      l942 0235                      l950 016F  
                    l926 01F0                      l944 0237                      l936 022C  
                    l960 0187                      l952 0173                      l928 01FD  
                    l946 023E                      l938 022D                      l970 01AA  
                    l962 018B                      l954 0179                      l964 019C  
                    l956 017C                      l972 01B0                      l966 01A2  
                    l958 0183                      l968 01A3                      u210 01F0  
                    u211 01EF                      u310 019C                      u311 019B  
                    u240 020A                      u400 00FE                      u305 018C  
                    u241 0209                      u225 01F7                      u401 00FD  
                    u250 0231                      u330 01B0                      u251 0230  
                    u331 01AF                      u315 0198                      u235 01FE  
                    u260 023E                      u261 023D                      u325 01A4  
                    u270 0179                      u271 0178                      u417 0104  
                    u290 018B                      u291 018A                      u427 00CE  
                    u380 00E7                      u285 017D                      u381 00E6  
                    u390 00F0                      u391 00EF                      _isr 0127  
                    fsr0 0004                      indf 0000          ??_mostrar_valor 0072  
                   l1100 00F0                     l1030 008F                     l1102 00F5  
                   l1110 010A                     l1040 00B0                     l1032 00A2  
                   l1112 0113                     l1104 00FE                     l1050 00BF  
                   l1042 00B1                     l1034 00A6                     l1026 008A  
                   l1106 0100                     l1060 00D4                     l1052 00C0  
                   l1044 00B2                     l1036 00A9                     l1028 008E  
                   l1108 0107                     l1070 002D                     l1062 00D7  
                   l1054 00C4                     l1046 00B8                     l1038 00AF  
                   l1072 0212                     l1064 00D8                     l1056 00C7  
                   l1048 00BC                     l1066 00D9                     l1058 00D1  
                   l1068 00DA                     l1094 00DC                     l1096 00E1  
                   l1098 00E7                     ?_isr 0070                     i1l75 0166  
                   i1l93 0269                     i1l69 014E                     _TMR0 0001  
                   _main 00DC                     _temp 007B                     btemp 007E  
                   start 000E        ___bmul@multiplier 0023              ?_RESET_TMR0 0070  
                  ??_isr 0075                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 01B5                    i1l104 01E7                    _TABLA 0036  
                  i1l980 01BE                    i1l990 01C5                    i1l982 01BF  
                  i1l984 01C1                    i1l976 01B6                    i1l994 01CB  
                  i1l978 01BC                    i1l996 01CD                    i1l988 01C3  
                  i1l998 01CE                    u34_20 012D                    u34_21 012C  
                  u35_20 0136                    u35_21 0135                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u36_20 0142                    u36_21 0141                    u37_20 0152  
                  u37_21 0151                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 008A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0127                   ??_main 0034  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1002 01D0                   i1l1020 0264                   i1l1004 01D2  
                 i1l1012 01D4                   i1l1022 0268                   i1l1144 01DC  
                 i1l1080 0136                   i1l1090 0160                   i1l1082 0139  
                 i1l1084 0142                   i1l1076 0127                   i1l1086 014C  
                 i1l1078 012D                   i1l1088 0152             ?_set_display 0020  
                 ___bmul 0229                   ___wmul 01E8                ??___lwdiv 002A  
                 saved_w 007E        RESET_TMR0@TMR_VAR 0070  __end_of__initialization 0029  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0070             __pidataBANK0 0253  
          __end_of_setup 00DC           _OPTION_REGbits 0081                  ??_setup 0020  
             __pbssBANK0 0046      set_display@VALORES0 0023      set_display@VALORES1 0020  
    set_display@VALORES2 0021             ??_RESET_TMR0 0070               __pmaintext 00DC  
                ?___bmul 0020                  ?___wmul 0020               __pintentry 0004  
     __end_of_RESET_TMR0 026A    __end_of_mostrar_valor 01E8                  ___lwdiv 016F  
  mostrar_valor@DISPLAY0 0074    mostrar_valor@DISPLAY1 0070    mostrar_valor@DISPLAY2 0071  
                __ptext1 008A                  __ptext2 020F                  __ptext3 002D  
                __ptext4 01E8                  __ptext5 016F                  __ptext6 0229  
                __ptext7 0127                  __ptext8 01B5                  __ptext9 0263  
                _display 0046            _obtener_valor 002D                  _valores 0049  
   end_of_initialization 0029                _PORTDbits 0008           ?_obtener_valor 002E  
         __end_of___bmul 0240           __end_of___wmul 020F      start_initialization 0011  
            __end_of_isr 016F                 ??___bmul 0021                 ??___wmul 0024  
             init_fetch0 0240              __pdataBANK0 0036          ??_obtener_valor 0030  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
              _t_ADRESH2 004C         ___lwdiv@dividend 0028                 ?___lwdiv 0026  
       ___lwdiv@quotient 002B        interrupt_function 0004           ___wmul@product 0024  
               _PIE1bits 008C            ??_set_display 0022                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0020  
    __end_of_set_display 0229                 _banderas 007A          ___lwdiv@divisor 0026  
        ___lwdiv@counter 002D       obtener_valor@VALOR 002E            _mostrar_valor 01B5  
             _INTCONbits 000B                 init_ram0 0244           ?_mostrar_valor 0070  
               intlevel1 0000              _set_display 020F               _OSCCONbits 008F  
             _RESET_TMR0 0263    __end_of_obtener_valor 008A  
